{"version":3,"file":"static/js/636.9e425446.chunk.js","mappings":"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","sources":["../node_modules/fast-deep-equal/react.js","../node_modules/react-tsparticles/esm/Particles.js","../node_modules/react-tsparticles/esm/index.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Core/Utils/FrameManager.js","../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Core/Loader.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/engine.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSizeLimit.js","../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSize.js","../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js","../node_modules/tsparticles-plugin-absorbers/esm/AbsorberInstance.js","../node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js","../node_modules/tsparticles-plugin-absorbers/esm/index.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/Split.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/Destroy.js","../node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js","../node_modules/tsparticles-updater-destroy/esm/index.js","../node_modules/tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterLife.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterRate.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js","../node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js","../node_modules/tsparticles-plugin-emitters/esm/Emitters.js","../node_modules/tsparticles-plugin-emitters/esm/ShapeManager.js","../node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js","../node_modules/tsparticles-plugin-emitters/esm/index.js","../node_modules/tsparticles-interaction-external-trail/esm/Options/Classes/Trail.js","../node_modules/tsparticles-interaction-external-trail/esm/TrailMaker.js","../node_modules/tsparticles-interaction-external-trail/esm/index.js","../node_modules/tsparticles-updater-roll/esm/Options/Classes/RollLight.js","../node_modules/tsparticles-updater-roll/esm/Options/Classes/Roll.js","../node_modules/tsparticles-updater-roll/esm/RollUpdater.js","../node_modules/tsparticles-updater-roll/esm/index.js","../node_modules/tsparticles-particles.js/esm/index.js","../node_modules/tsparticles-updater-angle/esm/Options/Classes/RotateAnimation.js","../node_modules/tsparticles-updater-angle/esm/Options/Classes/Rotate.js","../node_modules/tsparticles-updater-angle/esm/RotateUpdater.js","../node_modules/tsparticles-updater-angle/esm/index.js","../node_modules/tsparticles-move-base/esm/BaseMover.js","../node_modules/tsparticles-move-base/esm/Utils.js","../node_modules/tsparticles-move-base/esm/index.js","../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","../node_modules/tsparticles-shape-circle/esm/index.js","../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","../node_modules/tsparticles-updater-color/esm/index.js","../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-external-attract/esm/index.js","../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","../node_modules/tsparticles-interaction-external-bounce/esm/index.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","../node_modules/tsparticles-interaction-external-bubble/esm/index.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","../node_modules/tsparticles-interaction-external-connect/esm/index.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","../node_modules/tsparticles-interaction-external-grab/esm/index.js","../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","../node_modules/tsparticles-interaction-external-pause/esm/index.js","../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","../node_modules/tsparticles-interaction-external-push/esm/index.js","../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","../node_modules/tsparticles-interaction-external-remove/esm/index.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","../node_modules/tsparticles-interaction-external-repulse/esm/index.js","../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","../node_modules/tsparticles-interaction-external-slow/esm/index.js","../node_modules/tsparticles-shape-image/esm/Utils.js","../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","../node_modules/tsparticles-shape-image/esm/index.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","../node_modules/tsparticles-updater-life/esm/index.js","../node_modules/tsparticles-shape-line/esm/LineDrawer.js","../node_modules/tsparticles-shape-line/esm/index.js","../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","../node_modules/tsparticles-updater-opacity/esm/index.js","../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","../node_modules/tsparticles-updater-out-modes/esm/index.js","../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","../node_modules/tsparticles-move-parallax/esm/index.js","../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-particles-attract/esm/index.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","../node_modules/tsparticles-interaction-particles-links/esm/index.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","../node_modules/tsparticles-shape-polygon/esm/index.js","../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","../node_modules/tsparticles-updater-size/esm/index.js","../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","../node_modules/tsparticles-shape-square/esm/index.js","../node_modules/tsparticles-shape-star/esm/StarDrawer.js","../node_modules/tsparticles-shape-star/esm/index.js","../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","../node_modules/tsparticles-updater-stroke-color/esm/index.js","../node_modules/tsparticles-shape-text/esm/TextDrawer.js","../node_modules/tsparticles-shape-text/esm/index.js","../node_modules/tsparticles-slim/esm/index.js","../node_modules/tsparticles-updater-tilt/esm/Options/Classes/TiltAnimation.js","../node_modules/tsparticles-updater-tilt/esm/Options/Classes/Tilt.js","../node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js","../node_modules/tsparticles-updater-tilt/esm/index.js","../node_modules/tsparticles-updater-twinkle/esm/Options/Classes/TwinkleValues.js","../node_modules/tsparticles-updater-twinkle/esm/Options/Classes/Twinkle.js","../node_modules/tsparticles-updater-twinkle/esm/TwinkleUpdater.js","../node_modules/tsparticles-updater-twinkle/esm/index.js","../node_modules/tsparticles-updater-wobble/esm/Options/Classes/WobbleSpeed.js","../node_modules/tsparticles-updater-wobble/esm/Options/Classes/Wobble.js","../node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js","../node_modules/tsparticles-updater-wobble/esm/index.js","../node_modules/tsparticles/esm/index.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        continue;\n      }\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport equal from \"fast-deep-equal/react\";\nconst defaultId = \"tsparticles\";\nexport default class Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        return !equal(nextProps, this.props);\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: Object.assign(Object.assign({}, this.props.style), { width,\n                    height }) })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        var _a, _b, _c;\n        if (!this.state.init) {\n            return;\n        }\n        const cb = async (container) => {\n            if (this.props.container) {\n                this.props.container.current = container;\n            }\n            this.setState({\n                library: container,\n            });\n            if (this.props.loaded) {\n                await this.props.loaded(container);\n            }\n        };\n        const id = (_b = (_a = this.props.id) !== null && _a !== void 0 ? _a : Particles.defaultProps.id) !== null && _b !== void 0 ? _b : defaultId, container = this.props.url\n            ? await tsParticles.loadJSON(id, this.props.url)\n            : await tsParticles.load(id, (_c = this.props.params) !== null && _c !== void 0 ? _c : this.props.options);\n        await cb(container);\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        var _a;\n        this.removeEventListener(type, listener);\n        if (!this._listeners.get(type)) {\n            this._listeners.set(type, []);\n        }\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.push(listener);\n    }\n    dispatchEvent(type, args) {\n        var _a;\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","export class Vector3d {\n    constructor(xOrCoords, y, z) {\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z !== null && z !== void 0 ? z : 0;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector3d not initialized correctly\");\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (!easings.get(name)) {\n        easings.set(name, easing);\n    }\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return typeof value === \"number\" ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return typeof value === \"number\" ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return typeof value === \"number\" ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && typeof source === \"number\")) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = typeof random === \"boolean\"\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (typeof direction === \"number\") {\n        return (direction * Math.PI) / 180;\n    }\n    else {\n        switch (direction) {\n            case \"top\":\n                return -Math.PI / 2;\n            case \"top-right\":\n                return -Math.PI / 4;\n            case \"right\":\n                return 0;\n            case \"bottom-right\":\n                return Math.PI / 4;\n            case \"bottom\":\n                return Math.PI / 2;\n            case \"bottom-left\":\n                return (3 * Math.PI) / 4;\n            case \"left\":\n                return Math.PI;\n            case \"top-left\":\n                return (-3 * Math.PI) / 4;\n            case \"inside\":\n                return Math.atan2(center.y - position.y, center.x - position.x);\n            case \"outside\":\n                return Math.atan2(position.y - center.y, position.x - center.x);\n            default:\n                return getRandom() * Math.PI * 2;\n        }\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (((_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * 100) * data.size.width) / 100,\n        y: (((_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * data.size.width,\n        y: (_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getValue } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nfunction rectSideBounce(pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor) {\n    const res = { bounced: false };\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return res instanceof Array ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function animate() {\n    return isSsr()\n        ? (callback) => setTimeout(callback)\n        : (callback) => (requestAnimationFrame || setTimeout)(callback);\n}\nexport function cancelAnimation() {\n    return isSsr()\n        ? (handle) => clearTimeout(handle)\n        : (handle) => (cancelAnimationFrame || clearTimeout)(handle);\n}\nexport function isInArray(value, array) {\n    return value === array || (array instanceof Array && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight !== null && weight !== void 0 ? weight : \"400\"} 36px '${font !== null && font !== void 0 ? font : \"Verdana\"}'`);\n    }\n    catch (_a) {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (typeof source !== \"object\") {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], isObject = typeof value === \"object\", destDict = destination;\n            destDict[key] =\n                isObject && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, particle.velocity.x, getValue(particle.options.bounce.horizontal));\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, particle.velocity.y, getValue(particle.options.bounce.vertical));\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return obj instanceof Array ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (color.value instanceof Array) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (color.value instanceof Array) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    var _a;\n    return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.b = hslPercent.l;\n        result.g = hslPercent.l;\n        result.r = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min !== null && min !== void 0 ? min : 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    var _a, _b;\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor(), destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = typeof optColor === \"string\" ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    var _a, _b, _c, _d, _e;\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * ((_a = transform.a) !== null && _a !== void 0 ? _a : 1),\n        b: rotateData.sin * ((_b = transform.b) !== null && _b !== void 0 ? _b : 1),\n        c: -rotateData.sin * ((_c = transform.c) !== null && _c !== void 0 ? _c : 1),\n        d: rotateData.cos * ((_d = transform.d) !== null && _d !== void 0 ? _d : 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = (_e = particle.strokeWidth) !== null && _e !== void 0 ? _e : 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","export const generatedAttribute = \"generated\";\nexport const touchEndEvent = \"touchend\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchMoveEvent = \"touchmove\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n        this._mutationObserver =\n            !isSsr() && typeof MutationObserver !== \"undefined\"\n                ? new MutationObserver((records) => {\n                    for (const record of records) {\n                        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                            this._repairStyle();\n                        }\n                    }\n                })\n                : undefined;\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a, _b;\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        if (this._generated) {\n            (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        if (!this._context) {\n            return;\n        }\n        return cb(this._context);\n    }\n    drawParticle(particle, delta) {\n        var _a;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d;\n            const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1, strokeOpacity = (_d = particle.strokeOpacity) !== null && _d !== void 0 ? _d : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container: this.container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    async init() {\n        var _a;\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            console.error(e);\n        }\n        this.initBackground();\n        if (this.element) {\n            (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, { attributes: true });\n        }\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        var _a, _b;\n        if (this._generated) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, { attributes: true });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    _applyPostDrawUpdaters(particle) {\n        var _a;\n        for (const updater of this._postDrawUpdaters) {\n            (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n        var _a;\n        for (const updater of this._preDrawUpdaters) {\n            if (updater.getColorStyles) {\n                const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                if (fill) {\n                    colorStyles.fill = fill;\n                }\n                if (stroke) {\n                    colorStyles.stroke = stroke;\n                }\n            }\n            if (updater.getTransformValues) {\n                const updaterTransform = updater.getTransformValues(particle);\n                for (const key in updaterTransform) {\n                    setTransformValue(transform, updaterTransform, key);\n                }\n            }\n            (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyResizePlugins() {\n        for (const plugin of this._resizePlugins) {\n            if (plugin.resize) {\n                plugin.resize();\n            }\n        }\n    }\n    _getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const plugin of this._colorPlugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    _initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    _initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (this._fullScreen) {\n            this._originalStyle = deepExtend({}, element.style);\n            this._setFullScreenStyle();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    async _initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n        if (!trail.enable) {\n            return;\n        }\n        if (trailFill.color) {\n            const fillColor = rangeColorToRgb(trailFill.color);\n            if (!fillColor) {\n                return;\n            }\n            const trail = options.particles.move.trail;\n            this._trailFill = {\n                color: Object.assign({}, fillColor),\n                opacity: 1 / trail.length,\n            };\n        }\n        else {\n            await new Promise((resolve, reject) => {\n                if (!trailFill.image) {\n                    return;\n                }\n                const img = document.createElement(\"img\");\n                img.addEventListener(\"load\", () => {\n                    this._trailFill = {\n                        image: img,\n                        opacity: 1 / trail.length,\n                    };\n                    resolve();\n                });\n                img.addEventListener(\"error\", (evt) => {\n                    reject(evt.error);\n                });\n                img.src = trailFill.image;\n            });\n        }\n    }\n    _paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    _paintImage(image, opacity) {\n        this.draw((ctx) => {\n            paintImage(ctx, this.size, image, opacity);\n        });\n    }\n    _repairStyle() {\n        var _a, _b;\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this._initStyle();\n        this.initBackground();\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, { attributes: true });\n    }\n    _resetOriginalStyle() {\n        const element = this.element, originalStyle = this._originalStyle;\n        if (!(element && originalStyle)) {\n            return;\n        }\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n    }\n    _setFullScreenStyle() {\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        const priority = \"important\";\n        element.style.setProperty(\"position\", \"fixed\", priority);\n        element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n        element.style.setProperty(\"top\", \"0\", priority);\n        element.style.setProperty(\"left\", \"0\", priority);\n        element.style.setProperty(\"width\", \"100%\", priority);\n        element.style.setProperty(\"height\", \"100%\", priority);\n    }\n}\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.handlers = {\n            mouseMove: (e) => this.mouseTouchMove(e),\n            touchStart: (e) => this.mouseTouchMove(e),\n            touchMove: (e) => this.mouseTouchMove(e),\n            touchEnd: () => this.mouseTouchFinish(),\n            mouseLeave: () => this.mouseTouchFinish(),\n            touchCancel: () => this.mouseTouchFinish(),\n            touchEndClick: (e) => this.mouseTouchClick(e),\n            mouseUp: (e) => this.mouseTouchClick(e),\n            mouseDown: () => this.mouseDown(),\n            visibilityChange: () => this.handleVisibilityChange(),\n            themeChange: (e) => this.handleThemeChange(e),\n            oldThemeChange: (e) => this.handleThemeChange(e),\n            resize: () => this.handleWindowResize(),\n        };\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    doMouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions;\n        if (this.canPush) {\n            const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n            if (!mousePos) {\n                return;\n            }\n            mouseInteractivity.clickPosition = Object.assign({}, mousePos);\n            mouseInteractivity.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            executeOnSingleOrMultiple(onClick.mode, (mode) => this.handleClickMode(mode));\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        this.container.handleClickMode(mode);\n    }\n    handleThemeChange(e) {\n        const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n        if (theme && theme.default.auto) {\n            container.loadTheme(themeName);\n        }\n    }\n    handleVisibilityChange() {\n        const container = this.container, options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw(true);\n            }\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(async () => { var _a; return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize(); }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n    }\n    manageListeners(add) {\n        var _a;\n        const handlers = this.handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn;\n        let mouseLeaveTmpEvent = mouseLeaveEvent;\n        if (detectType === \"window\") {\n            container.interactivity.element = window;\n            mouseLeaveTmpEvent = mouseOutEvent;\n        }\n        else if (detectType === \"parent\" && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n        if (mediaMatch) {\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n            }\n            else if (mediaMatch.addListener !== undefined) {\n                if (add) {\n                    mediaMatch.addListener(handlers.oldThemeChange);\n                }\n                else {\n                    mediaMatch.removeListener(handlers.oldThemeChange);\n                }\n            }\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                if (this.resizeObserver && !add) {\n                    if (container.canvas.element) {\n                        this.resizeObserver.unobserve(container.canvas.element);\n                    }\n                    this.resizeObserver.disconnect();\n                    delete this.resizeObserver;\n                }\n                else if (!this.resizeObserver && add && container.canvas.element) {\n                    this.resizeObserver = new ResizeObserver((entries) => {\n                        const entry = entries.find((e) => e.target === container.canvas.element);\n                        if (!entry) {\n                            return;\n                        }\n                        this.handleWindowResize();\n                    });\n                    this.resizeObserver.observe(container.canvas.element);\n                }\n            }\n            else {\n                manageListener(window, resizeEvent, handlers.resize, add);\n            }\n        }\n        if (document) {\n            manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (!mousePosition || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (!plugin.clickPositionValid) {\n                continue;\n            }\n            handled = plugin.clickPositionValid(mousePosition);\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (!interactivity) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container, options = container.actualOptions;\n        if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"pointer\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === \"parent\") {\n                const source = mouseEvent.target, target = mouseEvent.currentTarget, canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else if (mouseEvent.target === container.canvas.element) {\n                pos = {\n                    x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                    y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                };\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = mouseMoveEvent;\n    }\n}\n","function initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nexport class FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    async nextFrame(timestamp) {\n        var _a;\n        try {\n            const container = this.container;\n            if (!container.smooth &&\n                container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw(false);\n                return;\n            }\n            (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : (container.lastFrameTime = timestamp);\n            const delta = initDelta(timestamp - container.lastFrameTime, container.fpsLimit, container.smooth);\n            container.lifeTime += delta.value;\n            container.lastFrameTime = timestamp;\n            if (delta.value > 1000) {\n                container.draw(false);\n                return;\n            }\n            await container.particles.draw(delta);\n            if (container.duration > 0 && container.lifeTime > container.duration) {\n                container.destroy();\n                return;\n            }\n            if (container.getAnimationStatus()) {\n                container.draw(false);\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\n","export class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (typeof data.cover === \"string\" ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        const ids = (_b = (_a = data.ids) !== null && _a !== void 0 ? _a : data.elementId) !== null && _b !== void 0 ? _b : data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.onClick.load((_a = data.onClick) !== null && _a !== void 0 ? _a : data.onclick);\n        const onDiv = (_b = data.onDiv) !== null && _b !== void 0 ? _b : data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load((_c = data.onHover) !== null && _c !== void 0 ? _c : data.onhover);\n        if (typeof data.resize === \"boolean\") {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (this._container) {\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadModeOptions) {\n                        interactor.loadModeOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: (_a = data.position.x) !== null && _a !== void 0 ? _a : 50,\n                y: (_b = data.position.y) !== null && _b !== void 0 ? _b : 50,\n            };\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { Random } from \"./Random\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (typeof data.random === \"boolean\") {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = (_b = (_a = data.rotate) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = (_d = (_c = data.rotate) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = (_a = data.bottom) !== null && _a !== void 0 ? _a : data.default;\n        this.left = (_b = data.left) !== null && _b !== void 0 ? _b : data.default;\n        this.right = (_c = data.right) !== null && _c !== void 0 ? _c : data.default;\n        this.top = (_d = data.top) !== null && _d !== void 0 ? _d : data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.position = data.position ? deepExtend({}, data.position) : undefined;\n    }\n}\n","import { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.angle.load(typeof data.angle === \"number\" ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance =\n                typeof data.distance === \"number\"\n                    ? {\n                        horizontal: data.distance,\n                        vertical: data.distance,\n                    }\n                    : Object.assign({}, data.distance);\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = (_b = (_a = data.outModes) !== null && _a !== void 0 ? _a : data.outMode) !== null && _b !== void 0 ? _b : data.out_mode;\n        if (outModes !== undefined) {\n            if (typeof outModes === \"object\") {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { AnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 2;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.opacity_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = (_b = (_a = data.width) !== null && _a !== void 0 ? _a : data.area) !== null && _b !== void 0 ? _b : data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = (_c = data.height) !== null && _c !== void 0 ? _c : data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 100;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = (_a = data.limit) !== null && _a !== void 0 ? _a : data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        var _a;\n        return ((_a = this.options[charKey]) !== null && _a !== void 0 ? _a : this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        var _a;\n        return ((_a = this.options[imageKey]) !== null && _a !== void 0 ? _a : this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        var _a;\n        return ((_a = this.options[polygonKey]) !== null && _a !== void 0 ? _a : this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, imageKey, imageAltKey, true);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n    loadShape(item, mainKey, altKey, altOverride) {\n        var _a, _b;\n        if (!item) {\n            return;\n        }\n        const isArray = item instanceof Array;\n        const emptyValue = isArray ? [] : {}, mainDifferentValues = isArray !== this.options[mainKey] instanceof Array, altDifferentValues = isArray !== this.options[altKey] instanceof Array;\n        if (mainDifferentValues) {\n            this.options[mainKey] = emptyValue;\n        }\n        if (altDifferentValues && altOverride) {\n            this.options[altKey] = emptyValue;\n        }\n        this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : emptyValue, item);\n        if (!this.options[altKey] || altOverride) {\n            this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : emptyValue, item);\n        }\n    }\n}\n","import { AnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 5;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.size_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend((_a = this.groups[group]) !== null && _a !== void 0 ? _a : {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = (_c = (_b = data.move) === null || _b === void 0 ? void 0 : _b.collisions) !== null && _c !== void 0 ? _c : (_d = data.move) === null || _d === void 0 ? void 0 : _d.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = (_e = data.stroke) !== null && _e !== void 0 ? _e : (_f = data.shape) === null || _f === void 0 ? void 0 : _f.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e;\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = (_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode;\n        if (typeof fullScreen === \"boolean\") {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles !== undefined) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = (_d = this._findDefaultTheme(\"dark\")) === null || _d === void 0 ? void 0 : _d.name;\n        this.defaultThemes.light = (_e = this._findDefaultTheme(\"light\")) === null || _e === void 0 ? void 0 : _e.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.options);\n        return responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n    _findDefaultTheme(mode) {\n        var _a;\n        return ((_a = this.themes.find((theme) => theme.default.value && theme.default.mode === mode)) !== null && _a !== void 0 ? _a : this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n    }\n    _importPreset(preset) {\n        this.load(this._engine.plugins.getPreset(preset));\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = this._engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.handleClickMode) {\n                interactor.handleClickMode(mode);\n            }\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.interact(particle, delta);\n            }\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        var _a;\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of this.container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        (_a = this.pathGenerator) === null || _a === void 0 ? void 0 : _a.reset(this);\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        var _a;\n        return this._getRollColor((_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getStrokeColor() {\n        var _a;\n        return this._getRollColor((_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        particlesOptions.load((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles);\n        this.interactivity = new Interactivity(engine, container);\n        this.interactivity.load(container.actualOptions.interactivity);\n        this.interactivity.load(particlesOptions.interactivity);\n        this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n        this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        const zIndexValue = getRangeValue(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value, sizeAnimation = sizeOptions.animation;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: getRangeValue(sizeOptions.value) * container.retina.pixelRatio,\n            max: getRangeMax(sizeRange) * pxRatio,\n            min: getRangeMin(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: getRangeValue(sizeOptions.animation.count),\n        };\n        if (sizeAnimation.enable) {\n            this.size.status = \"increasing\";\n            this.size.decay = 1 - getRangeValue(sizeAnimation.decay);\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = \"increasing\";\n                    break;\n                case \"random\":\n                    this.size.value = randomInRange(this.size);\n                    this.size.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = \"decreasing\";\n                    break;\n            }\n        }\n        this.size.initialValue = this.size.value;\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        const canvasSize = container.canvas.size, moveCenter = Object.assign({}, this.options.move.center), isCenterPercent = moveCenter.mode === \"percent\";\n        this.moveCenter = {\n            x: moveCenter.x * (isCenterPercent ? canvasSize.width / 100 : 1),\n            y: moveCenter.y * (isCenterPercent ? canvasSize.height / 100 : 1),\n            radius: (_f = this.options.move.center.radius) !== null && _f !== void 0 ? _f : 0,\n            mode: (_g = this.options.move.center.mode) !== null && _g !== void 0 ? _g : \"percent\",\n        };\n        this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n        switch (this.options.move.direction) {\n            case \"inside\":\n                this.outType = \"inside\";\n                break;\n            case \"outside\":\n                this.outType = \"outside\";\n                break;\n        }\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        this.offset = Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            (_h = mover.init) === null || _h === void 0 ? void 0 : _h.call(mover, this);\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            (_j = plugin.particleCreated) === null || _j === void 0 ? void 0 : _j.call(plugin, this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        var _a;\n        for (const updater of this.container.particles.updaters) {\n            (_a = updater.reset) === null || _a === void 0 ? void 0 : _a.call(updater, this);\n        }\n    }\n    _calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this._checkOverlap(pos, tryCount)) {\n            return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    _calculateVelocity() {\n        const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n        if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n            return res;\n        }\n        const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += randomInRange(setRangeValue(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= getRandom();\n        }\n        return res;\n    }\n    _checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    _getRollColor(color) {\n        var _a;\n        if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n            return color;\n        }\n        const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor((((_a = this.roll.angle) !== null && _a !== void 0 ? _a : 0) + backSum) / (Math.PI / backFactor)) % 2;\n        if (!rolled) {\n            return color;\n        }\n        if (this.backColor) {\n            return this.backColor;\n        }\n        if (this.roll.alter) {\n            return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n        }\n        return color;\n    }\n    _loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return deepExtend({}, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Range } from \"./Range\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const rect = range, circle = range, pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (circle.radius !== undefined) {\n            const rSum = r + circle.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (rect.size !== undefined) {\n            const w = rect.size.width, h = rect.size.height, edges = Math.pow(distPos.x - w, 2) + Math.pow(distPos.y - h, 2);\n            return edges <= r ** 2 || (distPos.x <= r + w && distPos.y <= r + h) || distPos.x <= w || distPos.y <= h;\n        }\n        return false;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._points = [];\n        this._divided = false;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this._NE) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this._NW) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this._SE) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this._SW) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    query(range, check, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            (_a = this._NE) === null || _a === void 0 ? void 0 : _a.query(range, check, res);\n            (_b = this._NW) === null || _b === void 0 ? void 0 : _b.query(range, check, res);\n            (_c = this._SE) === null || _c === void 0 ? void 0 : _c.query(range, check, res);\n            (_d = this._SW) === null || _d === void 0 ? void 0 : _d.query(range, check, res);\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n    subdivide() {\n        const x = this.rectangle.position.x, y = this.rectangle.position.y, w = this.rectangle.size.width, h = this.rectangle.size.height, capacity = this.capacity;\n        this._NE = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n        this._NW = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this._SE = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this._SW = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this._divided = true;\n    }\n}\n","import { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { calcPositionFromSize } from \"../Utils/NumberUtils\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.interactionManager = new InteractionManager(this._engine, container);\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    destroy() {\n        this.array = [];\n        this.zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            deleted++;\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this._applyDensity(options.particles.groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        var _a, _b;\n        const container = this.container, particlesToDelete = [];\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this.interactionManager.reset(particle);\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                (_b = plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(plugin, particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of this.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    _applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    _initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    _pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            let particle = this.pool.pop();\n            if (particle) {\n                particle.init(this.nextId, position, overrideOptions, group);\n            }\n            else {\n                particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n            }\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            this._engine.dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n}\n","import { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => {\n        const v = p.velocity.copy();\n        v.angle += (v.length * Math.PI) / 180;\n        return v;\n    },\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this.duration = 0;\n        this.lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.frameManager = new FrameManager(this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n        return true;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = animate()(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this.frameManager.nextFrame(timestamp);\n        });\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, (key, value) => {\n            if (key === \"_engine\" || key === \"_container\") {\n                return;\n            }\n            return value;\n        }, 2);\n    }\n    exportImage(callback, type, quality) {\n        const element = this.canvas.element;\n        if (element) {\n            element.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n        }\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this.lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            if (drawer.init) {\n                await drawer.init(this);\n            }\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.init) {\n                await plugin.init();\n            }\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.particlesSetup) {\n                plugin.particlesSetup();\n            }\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation()(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._options = loadContainerOptions(this._engine, this);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = Object.assign({}, defaultPathGenerator);\n        if (typeof pathOrGenerator === \"function\") {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    if (plugin.start) {\n                        await plugin.start();\n                    }\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.clear();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n    _intersectionManager(entries) {\n        if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            (entry.isIntersecting ? this.play : this.pause)();\n        }\n    }\n}\n","import { Container } from \"./Container\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\nasync function getDataFromUrl(jsonUrl, index) {\n    const url = itemFromSingleOrMultiple(jsonUrl, index);\n    if (!url) {\n        return;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    console.error(`tsParticles - Error ${response.status} while retrieving config file`);\n}\nexport class Loader {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    load(tagId, options, index) {\n        const params = { index, remote: false };\n        if (typeof tagId === \"string\") {\n            params.tagId = tagId;\n        }\n        else {\n            params.options = tagId;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async loadJSON(tagId, jsonUrl, index) {\n        let url, id;\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = jsonUrl;\n        }\n        return this.loadRemoteOptions({ tagId: id, url, index, remote: true });\n    }\n    async loadOptions(params) {\n        var _a, _b, _c;\n        const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url: jsonUrl, remote } = params, options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\n        let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = tagId;\n            (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this._engine.dom(), oldIndex = dom.findIndex((v) => v.id === tagId);\n        if (oldIndex >= 0) {\n            const old = this._engine.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this._engine, tagId, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    async loadRemoteOptions(params) {\n        return this.loadOptions(params);\n    }\n    async set(id, domContainer, options, index) {\n        const params = { index, remote: false };\n        if (typeof id === \"string\") {\n            params.tagId = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (domContainer instanceof HTMLElement) {\n            params.element = domContainer;\n        }\n        else {\n            params.options = domContainer;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async setJSON(id, domContainer, jsonUrl, index) {\n        let url, newId, newIndex, element;\n        if (id instanceof HTMLElement) {\n            element = id;\n            url = domContainer;\n            newIndex = jsonUrl;\n        }\n        else {\n            newId = id;\n            element = domContainer;\n            url = jsonUrl;\n            newIndex = index;\n        }\n        return this.loadRemoteOptions({ tagId: newId, url, index: newIndex, element, remote: true });\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        if (!this.getPathGenerator(type)) {\n            this.pathGenerators.set(type, pathGenerator);\n        }\n    }\n    addPlugin(plugin) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n    }\n    addPreset(presetKey, options, override = false) {\n        if (override || !this.getPreset(presetKey)) {\n            this.presets.set(presetKey, options);\n        }\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            if (!this.getShapeDrawer(type)) {\n                this.drawers.set(type, drawer);\n            }\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            if (updater.loadOptions) {\n                updater.loadOptions(options, ...sourceOptions);\n            }\n        }\n    }\n}\n","import { EventDispatcher } from \"./Utils/EventDispatcher\";\nimport { Loader } from \"./Core/Loader\";\nimport { Plugins } from \"./Core/Utils/Plugins\";\nexport class Engine {\n    constructor() {\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this._loader = new Loader(this);\n        this.plugins = new Plugins(this);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh();\n    }\n    async addMover(name, moverInitializer) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh();\n    }\n    async addParticleUpdater(name, updaterInitializer) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh();\n    }\n    async addPathGenerator(name, generator) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh();\n    }\n    async addPlugin(plugin) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh();\n    }\n    async addPreset(preset, options, override = false) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh();\n    }\n    async addShape(shape, drawer, init, afterEffect, destroy) {\n        let customDrawer;\n        if (typeof drawer === \"function\") {\n            customDrawer = {\n                afterEffect: afterEffect,\n                destroy: destroy,\n                draw: drawer,\n                init: init,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh();\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    init() {\n        if (!this._initialized) {\n            this._initialized = true;\n        }\n    }\n    async load(tagId, options) {\n        return this._loader.load(tagId, options);\n    }\n    async loadFromArray(tagId, options, index) {\n        return this._loader.load(tagId, options, index);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        return this._loader.loadJSON(tagId, pathConfigJson, index);\n    }\n    async refresh() {\n        for (const instance of this.dom()) {\n            await instance.refresh();\n        }\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options) {\n        return this._loader.set(id, element, options);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        return this._loader.setJSON(id, element, pathConfigJson, index);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { Engine } from \"./engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nconst rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\naddColorManager(rgbColorManager);\naddColorManager(hslColorManager);\nconst tsParticles = new Engine();\ntsParticles.init();\nexport * from \"./Core/Interfaces/Colors\";\nexport * from \"./Core/Interfaces/IBounds\";\nexport * from \"./Core/Interfaces/IBubbleParticleData\";\nexport * from \"./Core/Interfaces/ICircleBouncer\";\nexport * from \"./Core/Interfaces/IColorManager\";\nexport * from \"./Core/Interfaces/IContainerInteractivity\";\nexport * from \"./Core/Interfaces/IContainerPlugin\";\nexport * from \"./Core/Interfaces/ICoordinates\";\nexport * from \"./Core/Interfaces/IDelta\";\nexport * from \"./Core/Interfaces/IDimension\";\nexport * from \"./Core/Interfaces/IDistance\";\nexport * from \"./Core/Interfaces/IExternalInteractor\";\nexport * from \"./Core/Interfaces/IInteractor\";\nexport * from \"./Core/Interfaces/IMouseData\";\nexport * from \"./Core/Interfaces/IMovePathGenerator\";\nexport * from \"./Core/Interfaces/IParticle\";\nexport * from \"./Core/Interfaces/IParticleColorStyle\";\nexport * from \"./Core/Interfaces/IParticleHslAnimation\";\nexport * from \"./Core/Interfaces/IParticlesInteractor\";\nexport * from \"./Core/Interfaces/IParticleLife\";\nexport * from \"./Core/Interfaces/IParticleRetinaProps\";\nexport * from \"./Core/Interfaces/IParticleRoll\";\nexport * from \"./Core/Interfaces/IParticleTransformValues\";\nexport * from \"./Core/Interfaces/IParticleUpdater\";\nexport * from \"./Core/Interfaces/IParticleValueAnimation\";\nexport * from \"./Core/Interfaces/IParticlesMover\";\nexport * from \"./Core/Interfaces/IPlugin\";\nexport * from \"./Core/Interfaces/IRangeValue\";\nexport * from \"./Core/Interfaces/IRectSideResult\";\nexport * from \"./Core/Interfaces/IShapeDrawer\";\nexport * from \"./Core/Interfaces/IShapeValues\";\nexport * from \"./Core/Interfaces/ISlowParticleData\";\nexport * from \"./Core/Utils/Circle\";\nexport * from \"./Core/Utils/Constants\";\nexport * from \"./Core/Utils/ExternalInteractorBase\";\nexport * from \"./Core/Utils/ParticlesInteractorBase\";\nexport * from \"./Core/Utils/Point\";\nexport * from \"./Core/Utils/Range\";\nexport * from \"./Core/Utils/Rectangle\";\nexport * from \"./Core/Utils/Vector\";\nexport * from \"./Core/Utils/Vector3d\";\nexport * from \"./Enums/Directions/MoveDirection\";\nexport * from \"./Enums/Directions/RotateDirection\";\nexport * from \"./Enums/Directions/OutModeDirection\";\nexport * from \"./Enums/Modes/ClickMode\";\nexport * from \"./Enums/Modes/DivMode\";\nexport * from \"./Enums/Modes/HoverMode\";\nexport * from \"./Enums/Modes/CollisionMode\";\nexport * from \"./Enums/Modes/OutMode\";\nexport * from \"./Enums/Modes/SizeMode\";\nexport * from \"./Enums/Modes/ThemeMode\";\nexport * from \"./Enums/Modes/ResponsiveMode\";\nexport * from \"./Enums/Types/AlterType\";\nexport * from \"./Enums/Types/DestroyType\";\nexport * from \"./Enums/Types/GradientType\";\nexport * from \"./Enums/Types/InteractorType\";\nexport * from \"./Enums/Types/ParticleOutType\";\nexport * from \"./Enums/Types/StartValueType\";\nexport * from \"./Enums/Types/DivType\";\nexport * from \"./Enums/Types/EasingType\";\nexport * from \"./Enums/Types/EventType\";\nexport * from \"./Enums/AnimationStatus\";\nexport * from \"./Enums/InteractivityDetect\";\nexport * from \"./Options/Classes/AnimatableColor\";\nexport * from \"./Options/Classes/AnimationOptions\";\nexport * from \"./Options/Classes/Background/Background\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMask\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMaskCover\";\nexport * from \"./Options/Classes/ColorAnimation\";\nexport * from \"./Options/Classes/FullScreen/FullScreen\";\nexport * from \"./Options/Classes/HslAnimation\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Events\";\nexport * from \"./Options/Classes/Interactivity/Events/HoverEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Parallax\";\nexport * from \"./Options/Classes/Interactivity/Interactivity\";\nexport * from \"./Options/Classes/Interactivity/Modes/Modes\";\nexport * from \"./Options/Classes/ManualParticle\";\nexport * from \"./Options/Classes/Options\";\nexport * from \"./Options/Classes/OptionsColor\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounce\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounceFactor\";\nexport * from \"./Options/Classes/Particles/Collisions/Collisions\";\nexport * from \"./Options/Classes/Particles/Collisions/CollisionsOverlap\";\nexport * from \"./Options/Classes/Particles/ParticlesOptions\";\nexport * from \"./Options/Classes/Particles/Shadow\";\nexport * from \"./Options/Classes/Particles/Stroke\";\nexport * from \"./Options/Classes/Particles/Move/MoveAttract\";\nexport * from \"./Options/Classes/Particles/Move/Move\";\nexport * from \"./Options/Classes/Particles/Move/MoveAngle\";\nexport * from \"./Options/Classes/Particles/Move/MoveCenter\";\nexport * from \"./Options/Classes/Particles/Move/MoveGravity\";\nexport * from \"./Options/Classes/Particles/Move/OutModes\";\nexport * from \"./Options/Classes/Particles/Move/Path/MovePath\";\nexport * from \"./Options/Classes/Particles/Move/Spin\";\nexport * from \"./Options/Classes/Particles/Move/MoveTrail\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesNumber\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesDensity\";\nexport * from \"./Options/Classes/Particles/Opacity/Opacity\";\nexport * from \"./Options/Classes/Particles/Opacity/OpacityAnimation\";\nexport * from \"./Options/Classes/Particles/Shape/Shape\";\nexport * from \"./Options/Classes/Particles/Size/Size\";\nexport * from \"./Options/Classes/Particles/Size/SizeAnimation\";\nexport * from \"./Options/Classes/Particles/ZIndex/ZIndex\";\nexport * from \"./Options/Classes/Responsive\";\nexport * from \"./Options/Classes/Theme/Theme\";\nexport * from \"./Options/Classes/Theme/ThemeDefault\";\nexport * from \"./Options/Classes/ValueWithRandom\";\nexport * from \"./Options/Interfaces/Background/IBackground\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMask\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMaskCover\";\nexport * from \"./Options/Interfaces/FullScreen/IFullScreen\";\nexport * from \"./Options/Interfaces/IAnimatable\";\nexport * from \"./Options/Interfaces/IAnimatableColor\";\nexport * from \"./Options/Interfaces/IAnimation\";\nexport * from \"./Options/Interfaces/IColorAnimation\";\nexport * from \"./Options/Interfaces/IHslAnimation\";\nexport * from \"./Options/Interfaces/IManualParticle\";\nexport * from \"./Options/Interfaces/IOptionLoader\";\nexport * from \"./Options/Interfaces/IOptions\";\nexport * from \"./Options/Interfaces/IOptionsColor\";\nexport * from \"./Options/Interfaces/IResponsive\";\nexport * from \"./Options/Interfaces/IValueWithRandom\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IClickEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IDivEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IEvents\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IHoverEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IParallax\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModeDiv\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModes\";\nexport * from \"./Options/Interfaces/Interactivity/IInteractivity\";\nexport * from \"./Options/Interfaces/Particles/Bounce/IParticlesBounce\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisions\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisionsOverlap\";\nexport * from \"./Options/Interfaces/Particles/IParticlesOptions\";\nexport * from \"./Options/Interfaces/Particles/IShadow\";\nexport * from \"./Options/Interfaces/Particles/IStroke\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAttract\";\nexport * from \"./Options/Interfaces/Particles/Move/IMove\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAngle\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveCenter\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveGravity\";\nexport * from \"./Options/Interfaces/Particles/Move/Path/IMovePath\";\nexport * from \"./Options/Interfaces/Particles/Move/IOutModes\";\nexport * from \"./Options/Interfaces/Particles/Move/ISpin\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveTrail\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesDensity\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesNumber\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacity\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacityAnimation\";\nexport * from \"./Options/Interfaces/Particles/Shape/ICharacterShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IImageShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IPolygonShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShapeValues\";\nexport * from \"./Options/Interfaces/Particles/Shape/IStarShape\";\nexport * from \"./Options/Interfaces/Particles/Size/ISize\";\nexport * from \"./Options/Interfaces/Particles/Size/ISizeAnimation\";\nexport * from \"./Options/Interfaces/Particles/ZIndex/IZIndex\";\nexport * from \"./Options/Interfaces/Theme/ITheme\";\nexport * from \"./Options/Interfaces/Theme/IThemeDefault\";\nexport * from \"./Types/CustomEventArgs\";\nexport * from \"./Types/CustomEventListener\";\nexport * from \"./Types/ParticlesGroups\";\nexport * from \"./Types/PathOptions\";\nexport * from \"./Types/RangeValue\";\nexport * from \"./Types/RecursivePartial\";\nexport * from \"./Types/ShapeData\";\nexport * from \"./Types/ShapeDrawerFunctions\";\nexport * from \"./Types/SingleOrMultiple\";\nexport * from \"./Utils/CanvasUtils\";\nexport * from \"./Utils/ColorUtils\";\nexport * from \"./Utils/HslColorManager\";\nexport * from \"./Utils/NumberUtils\";\nexport * from \"./Utils/OptionsUtils\";\nexport * from \"./Utils/RgbColorManager\";\nexport * from \"./Utils/Utils\";\nexport { tsParticles };\nexport { CollisionsAbsorb } from \"./Options/Classes/Particles/Collisions/CollisionsAbsorb\";\nexport { ResizeEvent } from \"./Options/Classes/Interactivity/Events/ResizeEvent\";\n","export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nimport { ValueWithRandom } from \"tsparticles-engine\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (typeof data.limit === \"number\") {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nimport { AbsorberSize } from \"./AbsorberSize\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = (_a = rangeColorToRgb(this.options.color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    calcPosition() {\n        const exactPosition = calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n        return Vector.create(exactPosition.x, exactPosition.y);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container, canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n            particle.position.setTo(newPosition);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector.create(0, 0);\n                particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = getRandom() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (getRandom() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n            }\n            const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.setTo(Vector.origin);\n            const updateFunc = {\n                x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, itemFromSingleOrMultiple } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple((_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (absorbers instanceof Array) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine) {\n    const plugin = new AbsorbersPlugin();\n    await engine.addPlugin(plugin);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"tsparticles-engine\";\nimport { SplitFactor } from \"./SplitFactor\";\nimport { SplitRate } from \"./SplitRate\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n    }\n}\n","import { DestroyBounds } from \"./DestroyBounds\";\nimport { Split } from \"./Split\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = \"none\";\n        this.split = new Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n","import { getRangeValue, getValue, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBounds = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        if (destroyBounds.bottom) {\n            particle.destroyBounds.bottom = (getRangeValue(destroyBounds.bottom) * container.canvas.size.height) / 100;\n        }\n        if (destroyBounds.left) {\n            particle.destroyBounds.left = (getRangeValue(destroyBounds.left) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.right) {\n            particle.destroyBounds.right = (getRangeValue(destroyBounds.right) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.top) {\n            particle.destroyBounds.top = (getRangeValue(destroyBounds.top) * container.canvas.size.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            this.split(particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n    addSplitParticle(parent, splitParticlesOptions) {\n        const destroyOptions = parent.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split, options = loadParticlesOptions(this.engine, this.container, parent.options), factor = getValue(splitOptions.factor);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        options.move.load({\n            center: {\n                x: parent.position.x,\n                y: parent.position.y,\n                mode: \"precise\",\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitParticlesOptions);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.container.particles.addParticle(position, options, parent.group, (particle) => {\n            var _a;\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = ((_a = parent.splitCount) !== null && _a !== void 0 ? _a : 0) + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    split(particle) {\n        const destroyOptions = particle.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split;\n        if (splitOptions.count >= 0 &&\n            (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n            return;\n        }\n        const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n        for (let i = 0; i < rate; i++) {\n            this.addSplitParticle(particle, particlesSplitOptions);\n        }\n    }\n}\n","import { DestroyUpdater } from \"./DestroyUpdater\";\nexport async function loadDestroyUpdater(engine) {\n    await engine.addParticleUpdater(\"destroy\", (container) => new DestroyUpdater(engine, container));\n}\n","import { getRandom } from \"tsparticles-engine\";\nexport class CircleShape {\n    randomPosition(position, size, fill) {\n        const generateTheta = (x, y) => {\n            const u = getRandom() / 4.0, theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u)), v = getRandom();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [size.width / 2, size.height / 2], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            x: position.x + randomRadius * Math.cos(randomTheta),\n            y: position.y + randomRadius * Math.sin(randomTheta),\n        };\n    }\n}\n","export class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n","export class EmitterSize {\n    constructor() {\n        this.mode = \"percent\";\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, setRangeValue } from \"tsparticles-engine\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = \"square\";\n        this.startCount = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (this.size === undefined) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        if (data.shape !== undefined) {\n            this.shape = data.shape;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var _h;\n        this.emitters = emitters;\n        this.container = container;\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = this.options.name;\n        this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : (particlesOptions.move = {});\n        (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : (_h.direction = this.options.direction);\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            (_f = this.options.size) !== null && _f !== void 0 ? _f : (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: \"percent\",\n                    width: 0,\n                });\n                return size;\n            })();\n        this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return {\n            width: this.size.mode === \"percent\"\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            height: this.size.mode === \"percent\"\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this.prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this.emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this.calcPosition();\n                    this._spawnDelay = (((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this.emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    calcPosition() {\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n        this._engine.dispatchEvent(\"emitterDestroyed\", {\n            container: this.container,\n            data: {\n                emitter: this,\n            },\n        });\n    }\n    emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this.emitParticles(quantity);\n    }\n    emitParticles(quantity) {\n        var _a, _b, _c;\n        const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (hslAnimation) {\n                    this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                    this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                    this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            if (!position) {\n                return;\n            }\n            const pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n            this.container.particles.addParticle(pPosition, particlesOptions);\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this._duration = duration * 1000;\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\n","import { arrayRandomIndex, executeOnSingleOrMultiple, itemFromArray } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode === \"emitter\") {\n            let emittersModeOptions;\n            if (modeEmitters && modeEmitters.value instanceof Array) {\n                if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                    emittersModeOptions = [];\n                    const usedIndexes = [];\n                    for (let i = 0; i < modeEmitters.random.count; i++) {\n                        const idx = arrayRandomIndex(modeEmitters.value);\n                        if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                            i--;\n                            continue;\n                        }\n                        usedIndexes.push(idx);\n                        emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                    }\n                }\n                else {\n                    emittersModeOptions = modeEmitters.value;\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters === null || modeEmitters === void 0 ? void 0 : modeEmitters.value;\n            }\n            const emittersOptions = emittersModeOptions !== null && emittersModeOptions !== void 0 ? emittersModeOptions : emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n            executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n                this.addEmitter(emitter, ePosition);\n            });\n        }\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n","const shapes = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(getRandom() * 4), v = (getRandom() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, (emitter) => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (emitterMode.value instanceof Array) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_c = emitterMode.random.count) !== null && _c !== void 0 ? _c : 1,\n                                enable: (_d = emitterMode.random.enable) !== null && _d !== void 0 ? _d : false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_e = emitterMode.random.count) !== null && _e !== void 0 ? _e : 1,\n                                enable: (_f = emitterMode.random.enable) !== null && _f !== void 0 ? _f : false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((emitters instanceof Array && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            var _a;\n            (_a = engine.emitterShapeManager) === null || _a === void 0 ? void 0 : _a.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\n","import { deepExtend } from \"tsparticles-engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray } from \"tsparticles-engine\";\nimport { Trail } from \"./Options/Classes/Trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(delta) {\n        var _a, _b, _c, _d;\n        if (!this.container.retina.reduceFactor) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        let canEmit = true;\n        if (trailOptions.pauseOnStop) {\n            if (container.interactivity.mouse.position === this._lastPosition ||\n                (((_a = container.interactivity.mouse.position) === null || _a === void 0 ? void 0 : _a.x) === ((_b = this._lastPosition) === null || _b === void 0 ? void 0 : _b.x) &&\n                    ((_c = container.interactivity.mouse.position) === null || _c === void 0 ? void 0 : _c.y) === ((_d = this._lastPosition) === null || _d === void 0 ? void 0 : _d.y))) {\n                canEmit = false;\n            }\n        }\n        if (container.interactivity.mouse.position) {\n            this._lastPosition = {\n                x: container.interactivity.mouse.position.x,\n                y: container.interactivity.mouse.position.y,\n            };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source === null || source === void 0 ? void 0 : source.trail);\n        }\n    }\n    reset() {\n    }\n}\n","import { TrailMaker } from \"./TrailMaker\";\nexport async function loadExternalTrailInteraction(engine) {\n    await engine.addInteractor(\"externalTrail\", (container) => new TrailMaker(container));\n}\nexport * from \"./Options/Classes/Trail\";\nexport * from \"./Options/Interfaces/ITrail\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nimport { RollLight } from \"./RollLight\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = \"vertical\";\n        this.speed = 25;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n","import { getRandom, getRangeValue, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Roll } from \"./Options/Classes/Roll\";\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !(roll === null || roll === void 0 ? void 0 : roll.enable)) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor, max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nexport class RollUpdater {\n    getTransformValues(particle) {\n        var _a;\n        const roll = ((_a = particle.roll) === null || _a === void 0 ? void 0 : _a.enable) && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt === null || rollOpt === void 0 ? void 0 : rollOpt.enable) {\n            particle.roll = {\n                enable: rollOpt.enable,\n                horizontal: rollOpt.mode === \"horizontal\" || rollOpt.mode === \"both\",\n                vertical: rollOpt.mode === \"vertical\" || rollOpt.mode === \"both\",\n                angle: getRandom() * Math.PI * 2,\n                speed: getRangeValue(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = rangeColorToHsl(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = getRandom() >= 0.5 ? \"darken\" : \"enlighten\";\n                particle.roll.alter = {\n                    type: alterType,\n                    value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: \"darken\",\n                    value: getRangeValue(rollOpt.darken.value),\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: \"enlighten\",\n                    value: getRangeValue(rollOpt.enlighten.value),\n                };\n            }\n        }\n        else {\n            particle.roll = {\n                enable: false,\n                horizontal: false,\n                vertical: false,\n                angle: 0,\n                speed: 0,\n            };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!(roll === null || roll === void 0 ? void 0 : roll.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source === null || source === void 0 ? void 0 : source.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n","import { RollUpdater } from \"./RollUpdater\";\nexport async function loadRollUpdater(engine) {\n    await engine.addParticleUpdater(\"roll\", () => new RollUpdater());\n}\n","const initPjs = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initPjs };\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateAngle(particle, delta) {\n    var _a, _b;\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = rotate.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source === null || source === void 0 ? void 0 : source.rotate);\n        }\n    }\n    update(particle, delta) {\n        var _a, _b;\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n        particle.rotation = (_b = (_a = particle.rotate) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 0;\n    }\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadAngleUpdater(engine) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container));\n}\n","import { getDistance, getRangeMax, getRangeValue } from \"tsparticles-engine\";\nimport { applyDistance, applyPath, getProximitySpeedFactor, spin } from \"./Utils\";\nexport class BaseMover {\n    init(particle) {\n        var _a;\n        const container = particle.container, options = particle.options, gravityOptions = options.move.gravity, spinOptions = options.move.spin;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        if (spinOptions.enable) {\n            const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, slowFactor = getProximitySpeedFactor(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, speedFactor = sizeFactor * slowFactor * (delta.factor || 1), diffFactor = 2, moveSpeed = (baseSpeed * speedFactor) / diffFactor;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            applyPath(particle, delta);\n            const gravityOptions = particle.gravity, gravityFactor = (gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && gravityOptions.inverse ? -1 : 1;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && moveSpeed) {\n                particle.velocity.y +=\n                    (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n            }\n            if (moveDrift && moveSpeed) {\n                particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n            }\n            const decay = particle.moveDecay;\n            if (decay != 1) {\n                particle.velocity.multTo(decay);\n            }\n            const velocity = particle.velocity.mult(moveSpeed), maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) &&\n                maxSpeed > 0 &&\n                ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                    (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n                velocity.y = gravityFactor * maxSpeed;\n                if (moveSpeed) {\n                    particle.velocity.y = velocity.y / moveSpeed;\n                }\n            }\n            const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        applyDistance(particle);\n    }\n}\n","import { clamp, getDistances, getRandom } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), hDistance = particle.retina.maxDistance.horizontal, vDistance = particle.retina.maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    var _a;\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = (_a = particle.pathGenerator) === null || _a === void 0 ? void 0 : _a.generate(particle);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine) {\n    engine.addMover(\"base\", () => new BaseMover());\n}\n","export class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        var _a;\n        const shapeData = particle.shapeData, angle = (_a = shapeData === null || shapeData === void 0 ? void 0 : shapeData.angle) !== null && _a !== void 0 ? _a : {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange =\n            typeof angle !== \"object\"\n                ? {\n                    min: 0,\n                    max: (angle * Math.PI) / 180,\n                }\n                : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine) {\n    await engine.addShape(\"circle\", new CircleDrawer());\n}\n","import { getHslAnimationFromHsl, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        (colorValue.loops !== undefined &&\n            colorValue.maxLoops !== undefined &&\n            colorValue.maxLoops > 0 &&\n            colorValue.loops >= colorValue.maxLoops)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateColor(particle, delta) {\n    var _a, _b, _c;\n    const animationOptions = particle.options.color.animation;\n    const h = (_a = particle.color) === null || _a === void 0 ? void 0 : _a.h, s = (_b = particle.color) === null || _b === void 0 ? void 0 : _b.s, l = (_c = particle.color) === null || _c === void 0 ? void 0 : _c.l;\n    if (h) {\n        updateColorValue(delta, h, animationOptions.h, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, animationOptions.s, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, animationOptions.l, 100, true);\n    }\n}\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const animationOptions = particle.options.color.animation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable) ||\n                (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable) ||\n                (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container));\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.attract) {\n                        container.attract = { particles: [] };\n                    }\n                    container.attract.clicking = false;\n                }\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source === null || source === void 0 ? void 0 : source.attract);\n        }\n    }\n    reset() {\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n    hoverAttract() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n        if (!attractOptions) {\n            return;\n        }\n        const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container));\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this.processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this.singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source === null || source === void 0 ? void 0 : source.bounce);\n        }\n    }\n    reset() {\n    }\n    processBounce(position, radius, area) {\n        const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (area instanceof Circle) {\n                circleBounce(circleBounceDataFromParticle(particle), {\n                    position,\n                    radius,\n                    mass: (radius ** 2 * Math.PI) / 2,\n                    velocity: Vector.origin,\n                    factor: Vector.origin,\n                });\n            }\n            else if (area instanceof Rectangle) {\n                rectBounce(particle, calculateBounds(position, radius));\n            }\n        }\n    }\n    processMouseBounce() {\n        const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n        if (!radius || radius < 0 || !mousePos) {\n            return;\n        }\n        this.processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n    }\n    singleSelectorBounce(selector, div) {\n        const container = this.container, query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, radius + tolerance)\n                : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n            this.processBounce(pos, radius, area);\n        });\n    }\n}\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container));\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { OptionsColor, executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = this.color instanceof Array ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { BubbleBase } from \"./BubbleBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, clamp, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this.hoverBubble(delta);\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this.clickBubble(delta);\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this.singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divBubble = isDivModeEnabled(\"bubble\", divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return isInArray(\"bubble\", hoverMode) || isInArray(\"bubble\", clickMode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source === null || source === void 0 ? void 0 : source.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n    clickBubble(delta) {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubble = options.interactivity.modes.bubble;\n        if (!bubble || !mouseClickPos) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        const distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: \"size\",\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.opacity.value),\n                    value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1,\n                },\n                type: \"opacity\",\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= distance) {\n                    this.hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble(delta) {\n        const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0 || mousePos === undefined) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle, ratio);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleColor(particle, ratio, divBubble) {\n        const options = this.container.actualOptions;\n        const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n        if (!bubbleOptions) {\n            return;\n        }\n        if (!particle.bubble.finalColor) {\n            const modeColor = bubbleOptions.color;\n            if (!modeColor) {\n                return;\n            }\n            const bubbleColor = itemFromSingleOrMultiple(modeColor);\n            particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n        }\n        if (!particle.bubble.finalColor) {\n            return;\n        }\n        if (bubbleOptions.mix) {\n            particle.bubble.color = undefined;\n            const pColor = particle.getFillColor();\n            particle.bubble.color = pColor\n                ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                : particle.bubble.finalColor;\n        }\n        else {\n            particle.bubble.color = particle.bubble.finalColor;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a, _b, _c, _d;\n        const container = this.container, options = container.actualOptions, modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : (_b = options.interactivity.modes.bubble) === null || _b === void 0 ? void 0 : _b.opacity;\n        if (!modeOpacity) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = (_d = (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container, modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubble = options.interactivity.modes.bubble;\n        if (!bubble || bubbleParam === undefined) {\n            return;\n        }\n        const bubbleDuration = bubble.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n        if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        if (!container.bubble.durationEnd) {\n            if (distMouse <= bubbleDistance) {\n                const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                if (obj !== bubbleParam) {\n                    const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                    if (type === \"size\") {\n                        particle.bubble.radius = value;\n                    }\n                    if (type === \"opacity\") {\n                        particle.bubble.opacity = value;\n                    }\n                }\n            }\n            else {\n                if (type === \"size\") {\n                    delete particle.bubble.radius;\n                }\n                if (type === \"opacity\") {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n        else if (pObjBubble) {\n            if (type === \"size\") {\n                delete particle.bubble.radius;\n            }\n            if (type === \"opacity\") {\n                delete particle.bubble.opacity;\n            }\n        }\n    }\n    singleSelectorHover(delta, selector, div) {\n        const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble || !selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = bubble.divs;\n                const divBubble = divMode(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.clear(particle, delta, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, 1, divBubble);\n            }\n        });\n    }\n}\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container));\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nfunction gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nfunction lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nfunction drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, ls, pos1, pos2);\n    });\n}\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source === null || source === void 0 ? void 0 : source.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container));\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n    }\n}\n","import { ExternalInteractorBase, drawLine, getDistance, getLinkColor, getLinkRandomColor, getStyleFromRgb, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nfunction drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : (_b = particle.options.links) === null || _b === void 0 ? void 0 : _b.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                return;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source === null || source === void 0 ? void 0 : source.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container));\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { Pauser } from \"./Pauser\";\nexport function loadExternalPauseInteraction(engine) {\n    engine.addInteractor(\"externalPause\", (container) => new Pauser(container));\n}\n","export class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nimport { itemFromArray } from \"tsparticles-engine\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const pushNb = pushOptions.quantity;\n            if (pushNb <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(pushNb, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source === null || source === void 0 ? void 0 : source.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container));\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","export class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = options.interactivity.modes.remove.quantity;\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { Remover } from \"./Remover\";\nexport function loadExternalRemoveInteraction(engine) {\n    engine.addInteractor(\"externalRemove\", (container) => new Remover(container));\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { RepulseBase } from \"./RepulseBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulse = options.interactivity.modes.repulse;\n            if (!repulse || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            container.repulse.clicking = true;\n            container.repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n            container.repulse.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.repulse) {\n                        container.repulse = { particles: [] };\n                    }\n                    container.repulse.clicking = false;\n                }\n            }, repulse.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source === null || source === void 0 ? void 0 : source.repulse);\n        }\n    }\n    reset() {\n    }\n    clickRepulse() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            if (!repulseDistance || repulseDistance < 0) {\n                return;\n            }\n            const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n        if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        if (!repulseOptions) {\n            return;\n        }\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n}\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container));\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source === null || source === void 0 ? void 0 : source.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slow = options.interactivity.modes.slow;\n        if (!slow || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slow.factor;\n        if (dist <= radius) {\n            particle.slow.inRange = true;\n            particle.slow.factor = proximityFactor / slowFactor;\n        }\n    }\n}\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container));\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { getStyleFromHsl } from \"tsparticles-engine\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            console.error(`Error tsParticles - loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        console.error(\"Error tsParticles - Image not found\");\n        image.error = true;\n    }\n    if (!image.error) {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    var _a, _b, _c;\n    const svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1), imageRes = {\n        color,\n        data: Object.assign(Object.assign({}, image), { svgData: svgColoredData }),\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = Object.assign(Object.assign({}, image), { error: false, loading: true });\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { downloadSvgImage, loadImage, replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor() {\n        this._images = [];\n    }\n    addImage(container, image) {\n        const containerImages = this.getImages(container);\n        containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n    destroy() {\n        this._images = [];\n    }\n    draw(context, particle, radius, opacity) {\n        var _a;\n        const image = particle.image, element = image === null || image === void 0 ? void 0 : image.element;\n        if (!element) {\n            return;\n        }\n        const ratio = (_a = image === null || image === void 0 ? void 0 : image.ratio) !== null && _a !== void 0 ? _a : 1, pos = {\n            x: -radius,\n            y: -radius,\n        };\n        context.globalAlpha = opacity;\n        context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        context.globalAlpha = 1;\n    }\n    getImages(container) {\n        const containerImages = this._images.find((t) => t.id === container.id);\n        if (!containerImages) {\n            this._images.push({\n                id: container.id,\n                images: [],\n            });\n            return this.getImages(container);\n        }\n        else {\n            return containerImages;\n        }\n    }\n    getSidesCount() {\n        return 12;\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const container = particle.container, images = this.getImages(container).images, imageData = particle.shapeData, image = images.find((t) => t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(container, imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        var _a;\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const images = this.getImages(container).images, imageData = particle.shapeData, color = particle.getFillColor(), replaceColor = (_a = imageData.replaceColor) !== null && _a !== void 0 ? _a : imageData.replace_color, image = images.find((t) => t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            var _a, _b;\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    loaded: true,\n                    ratio: imageData.width / imageData.height,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = (_a = imageData.fill) !== null && _a !== void 0 ? _a : particle.fill, close = (_b = imageData.close) !== null && _b !== void 0 ? _b : particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n    async loadImageShape(container, imageShape) {\n        var _a;\n        const source = imageShape.src;\n        if (!source) {\n            throw new Error(\"Error tsParticles - No image.src\");\n        }\n        try {\n            const image = {\n                source: source,\n                type: source.substring(source.length - 3),\n                error: false,\n                loading: true,\n            };\n            this.addImage(container, image);\n            const imageFunc = ((_a = imageShape.replaceColor) !== null && _a !== void 0 ? _a : imageShape.replace_color) ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch (_b) {\n            throw new Error(`tsParticles error - ${imageShape.src} not found`);\n        }\n    }\n}\n","import { ImageDrawer } from \"./ImageDrawer\";\nexport async function loadImageShape(engine) {\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer());\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source === null || source === void 0 ? void 0 : source.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container));\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine) {\n    await engine.addShape(\"line\", new LineDrawer());\n}\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateOpacity(particle, delta) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!particle.opacity) {\n        return;\n    }\n    const minValue = particle.opacity.min, maxValue = particle.opacity.max, decay = (_a = particle.opacity.decay) !== null && _a !== void 0 ? _a : 1;\n    if (particle.destroyed ||\n        !particle.opacity.enable ||\n        (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) > ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))) {\n        return;\n    }\n    switch (particle.opacity.status) {\n        case \"increasing\":\n            if (particle.opacity.value >= maxValue) {\n                particle.opacity.status = \"decreasing\";\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value += ((_e = particle.opacity.velocity) !== null && _e !== void 0 ? _e : 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (particle.opacity.value <= minValue) {\n                particle.opacity.status = \"increasing\";\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value -= ((_f = particle.opacity.velocity) !== null && _f !== void 0 ? _f : 0) * delta.factor;\n            }\n            break;\n    }\n    if (particle.opacity.velocity && particle.opacity.decay !== 1) {\n        particle.opacity.velocity *= decay;\n    }\n    checkDestroy(particle, particle.opacity.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.opacity.value = clamp(particle.opacity.value, minValue, maxValue);\n    }\n}\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = {\n            enable: opacityOptions.animation.enable,\n            max: getRangeMax(opacityOptions.value),\n            min: getRangeMin(opacityOptions.value),\n            value: getRangeValue(opacityOptions.value),\n            loops: 0,\n            maxLoops: getRangeValue(opacityOptions.animation.count),\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.decay = 1 - getRangeValue(opacityAnimation.decay);\n            particle.opacity.status = \"increasing\";\n            const opacityRange = opacityOptions.value;\n            particle.opacity.min = getRangeMin(opacityRange);\n            particle.opacity.max = getRangeMax(opacityRange);\n            switch (opacityAnimation.startValue) {\n                case \"min\":\n                    particle.opacity.value = particle.opacity.min;\n                    particle.opacity.status = \"increasing\";\n                    break;\n                case \"random\":\n                    particle.opacity.value = randomInRange(particle.opacity);\n                    particle.opacity.status =\n                        getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                    break;\n                case \"max\":\n                default:\n                    particle.opacity.value = particle.opacity.max;\n                    particle.opacity.status = \"decreasing\";\n                    break;\n            }\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n        particle.opacity.initialValue = particle.opacity.value;\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            (((_a = particle.opacity.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 &&\n                    ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container));\n}\n","import { calculateBounds } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.right < 0) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.bottom < 0) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        var _a, _b, _c, _d;\n        const outModes = particle.options.move.outModes;\n        this.updateOutMode(particle, delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, \"bottom\");\n        this.updateOutMode(particle, delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, \"left\");\n        this.updateOutMode(particle, delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, \"right\");\n        this.updateOutMode(particle, delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, \"top\");\n    }\n    updateOutMode(particle, delta, outMode, direction) {\n        for (const updater of this.updaters) {\n            updater.update(particle, direction, delta, outMode);\n        }\n    }\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container));\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions;\n        if (isSsr() || !options.interactivity.events.onHover.parallax.enable) {\n            return;\n        }\n        const parallaxForce = options.interactivity.events.onHover.parallax.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasCenter = {\n            x: container.canvas.size.width / 2,\n            y: container.canvas.size.height / 2,\n        }, parallaxSmooth = options.interactivity.events.onHover.parallax.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        };\n        particle.offset.x += (centerDistance.x - particle.offset.x) / parallaxSmooth;\n        particle.offset.y += (centerDistance.y - particle.offset.y) / parallaxSmooth;\n    }\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine) {\n    engine.addMover(\"parallax\", () => new ParallaxMover());\n}\n","import { ParticlesInteractorBase, getDistances } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        var _a;\n        const container = this.container, distance = (_a = p1.retina.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container));\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle } from \"tsparticles-engine\";\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p1 : p2;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container));\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = Object.assign({}, canvasSize);\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nimport { OptionsColor } from \"tsparticles-engine\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistance, getLinkRandomColor } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    let distance = getDistance(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const pos2NE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y,\n    };\n    distance = getDistance(pos1, pos2NE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SW = {\n        x: pos2.x,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SW);\n    return distance;\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !(linkOpt2 === null || linkOpt2 === void 0 ? void 0 : linkOpt2.enable) ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.map((t) => t.destination).indexOf(p2) !== -1 ||\n                p2.links.map((t) => t.destination).indexOf(p1) !== -1) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this.setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        return !!((_a = particle.options.links) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadParticlesOptions(options, ...sources) {\n        var _a, _b;\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load((_b = (_a = source === null || source === void 0 ? void 0 : source.links) !== null && _a !== void 0 ? _a : source === null || source === void 0 ? void 0 : source.lineLinked) !== null && _b !== void 0 ? _b : source === null || source === void 0 ? void 0 : source.line_linked);\n        }\n    }\n    reset() {\n    }\n    setColor(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.linkContainer, linksOptions = p1.options.links;\n        let linkColor = linksOptions.id === undefined\n            ? container.particles.linksColor\n            : container.particles.linksColors.get(linksOptions.id);\n        if (linkColor) {\n            return;\n        }\n        const optColor = linksOptions.color;\n        linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n        if (linksOptions.id === undefined) {\n            container.particles.linksColor = linkColor;\n        }\n        else {\n            container.particles.linksColors.set(linksOptions.id, linkColor);\n        }\n    }\n}\n","import { Linker } from \"./Linker\";\nexport async function loadInteraction(engine) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container));\n}\n","import { drawLinkLine, drawLinkTriangle } from \"./Utils\";\nimport { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb } from \"tsparticles-engine\";\nfunction getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nfunction setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        var _a;\n        const pOptions = particle.options;\n        if (!particle.links || particle.links.length <= 0) {\n            return;\n        }\n        const p1Links = particle.links.filter((l) => pOptions.links && this.getLinkFrequency(particle, l.destination) <= pOptions.links.frequency);\n        for (const link of p1Links) {\n            this.drawTriangles(pOptions, particle, link, p1Links);\n            if (link.opacity > 0 && ((_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0) > 0) {\n                this.drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio;\n        particle.retina.linksDistance = particle.options.links.distance * ratio;\n        particle.retina.linksWidth = particle.options.links.width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        let opacity = link.opacity;\n        container.canvas.draw((ctx) => {\n            var _a, _b, _c;\n            if (!p1.options.links) {\n                return;\n            }\n            let colorLine;\n            const twinkle = (_a = p1.options.twinkle) === null || _a === void 0 ? void 0 : _a.lines;\n            if (twinkle === null || twinkle === void 0 ? void 0 : twinkle.enable) {\n                const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                if (twinkling && twinkleRgb) {\n                    colorLine = twinkleRgb;\n                    opacity = getRangeValue(twinkle.opacity);\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_b = p1.retina.linksWidth) !== null && _b !== void 0 ? _b : 0, maxDistance = (_c = p1.retina.linksDistance) !== null && _c !== void 0 ? _c : 0;\n            drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, triangleOptions = p1.options.links.triangles, opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        container.canvas.draw((ctx) => {\n            var _a;\n            const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0;\n            if (getDistance(pos1, pos2) > linksDistance ||\n                getDistance(pos3, pos2) > linksDistance ||\n                getDistance(pos3, pos1) > linksDistance) {\n                return;\n            }\n            let colorTriangle = rangeColorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawTriangles(options, p1, link, p1Links) {\n        var _a, _b, _c;\n        const p2 = link.destination;\n        if (!(((_a = options.links) === null || _a === void 0 ? void 0 : _a.triangles.enable) && ((_b = p2.options.links) === null || _b === void 0 ? void 0 : _b.triangles.enable))) {\n            return;\n        }\n        const vertices = (_c = p2.links) === null || _c === void 0 ? void 0 : _c.filter((t) => {\n            const linkFreq = this.getLinkFrequency(p2, t.destination);\n            return (p2.options.links &&\n                linkFreq <= p2.options.links.frequency &&\n                p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n        });\n        if (!(vertices === null || vertices === void 0 ? void 0 : vertices.length)) {\n            return;\n        }\n        for (const vertex of vertices) {\n            const p3 = vertex.destination, triangleFreq = this.getTriangleFrequency(p1, p2, p3);\n            if (triangleFreq > options.links.triangles.frequency) {\n                continue;\n            }\n            this.drawLinkTriangle(p1, link, vertex);\n        }\n    }\n    getLinkFrequency(p1, p2) {\n        return setLinkFrequency([p1, p2], this._freqs.links);\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n    }\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n    let drawn = false;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadPlugin(engine) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin);\n}\n","import { loadInteraction } from \"./interaction\";\nimport { loadPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine) {\n    await loadInteraction(engine);\n    await loadPlugin(engine);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const polygon = particle.shapeData, sides = Math.round(getRangeValue((_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5));\n        return sides;\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine) {\n    await engine.addShape(\"polygon\", new PolygonDrawer());\n}\nexport async function loadTriangleShape(engine) {\n    await engine.addShape(\"triangle\", new TriangleDrawer());\n}\nexport async function loadPolygonShape(engine) {\n    await loadGenericPolygonShape(engine);\n    await loadTriangleShape(engine);\n}\n","import { clamp, getRandom } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateSize(particle, delta) {\n    var _a, _b, _c, _d, _e;\n    const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, minValue = particle.size.min, maxValue = particle.size.max, decay = (_b = particle.size.decay) !== null && _b !== void 0 ? _b : 1;\n    if (particle.destroyed ||\n        !particle.size.enable ||\n        (((_c = particle.size.maxLoops) !== null && _c !== void 0 ? _c : 0) > 0 && ((_d = particle.size.loops) !== null && _d !== void 0 ? _d : 0) > ((_e = particle.size.maxLoops) !== null && _e !== void 0 ? _e : 0))) {\n        return;\n    }\n    switch (particle.size.status) {\n        case \"increasing\":\n            if (particle.size.value >= maxValue) {\n                particle.size.status = \"decreasing\";\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (particle.size.value <= minValue) {\n                particle.size.status = \"increasing\";\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value -= sizeVelocity;\n            }\n    }\n    if (particle.size.velocity && decay !== 1) {\n        particle.size.velocity *= decay;\n    }\n    checkDestroy(particle, particle.size.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.size.value = clamp(particle.size.value, minValue, maxValue);\n    }\n}\nexport class SizeUpdater {\n    init(particle) {\n        var _a;\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                (((_a = particle.retina.sizeAnimationSpeed) !== null && _a !== void 0 ? _a : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            (((_a = particle.size.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.size.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.size.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.size.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater());\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        context.rect(-radius / fixFactor, -radius / fixFactor, (radius * 2) / fixFactor, (radius * 2) / fixFactor);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine) {\n    const drawer = new SquareDrawer();\n    await engine.addShape([\"edge\", \"square\"], drawer);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        var _a;\n        const sides = particle.sides, inset = (_a = particle.starInset) !== null && _a !== void 0 ? _a : 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const star = particle.shapeData;\n        return Math.round(getRangeValue((_b = (_a = star === null || star === void 0 ? void 0 : star.sides) !== null && _a !== void 0 ? _a : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _b !== void 0 ? _b : 5));\n    }\n    particleInit(container, particle) {\n        var _a;\n        const star = particle.shapeData, inset = getRangeValue((_a = star === null || star === void 0 ? void 0 : star.inset) !== null && _a !== void 0 ? _a : 2);\n        particle.starInset = inset;\n    }\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine) {\n    await engine.addShape(\"star\", new StarDrawer());\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue ||\n        !colorValue.enable ||\n        (colorValue.loops !== undefined &&\n            colorValue.maxLoops !== undefined &&\n            colorValue.maxLoops > 0 &&\n            colorValue.loops >= colorValue.maxLoops)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const h = particle.strokeColor.h;\n    if (h) {\n        updateColorValue(delta, h, particle.strokeAnimation.h, 360, false);\n    }\n    const s = particle.strokeColor.s;\n    if (s) {\n        updateColorValue(delta, s, particle.strokeAnimation.s, 100, true);\n    }\n    const l = particle.strokeColor.l;\n    if (l) {\n        updateColorValue(delta, l, particle.strokeAnimation.l, 100, true);\n    }\n}\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a, _b, _c;\n        const container = this.container;\n        const stroke = itemFromSingleOrMultiple(particle.options.stroke, particle.id, particle.options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue((_a = stroke.opacity) !== null && _a !== void 0 ? _a : 1);\n        particle.strokeAnimation = (_b = stroke.color) === null || _b === void 0 ? void 0 : _b.animation;\n        const strokeHslColor = (_c = rangeColorToHsl(stroke.color)) !== null && _c !== void 0 ? _c : particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const color = particle.strokeAnimation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((((_a = particle.strokeColor) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && particle.strokeColor.h.enable) ||\n                (((_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && particle.strokeColor.s.enable) ||\n                (((_c = particle.strokeColor) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && particle.strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container));\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        var _a, _b, _c;\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = textParticle.text, style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\", weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\", size = Math.round(radius) * 2, font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine) {\n    await engine.addShape(validTypes, new TextDrawer());\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadAngleUpdater } from \"tsparticles-updater-angle\";\nimport { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine) {\n    await loadBaseMover(engine);\n    await loadParallaxMover(engine);\n    await loadExternalAttractInteraction(engine);\n    await loadExternalBounceInteraction(engine);\n    await loadExternalBubbleInteraction(engine);\n    await loadExternalConnectInteraction(engine);\n    await loadExternalGrabInteraction(engine);\n    await loadExternalPauseInteraction(engine);\n    await loadExternalPushInteraction(engine);\n    await loadExternalRemoveInteraction(engine);\n    await loadExternalRepulseInteraction(engine);\n    await loadExternalSlowInteraction(engine);\n    await loadParticlesAttractInteraction(engine);\n    await loadParticlesCollisionsInteraction(engine);\n    await loadParticlesLinksInteraction(engine);\n    await loadCircleShape(engine);\n    await loadImageShape(engine);\n    await loadLineShape(engine);\n    await loadPolygonShape(engine);\n    await loadSquareShape(engine);\n    await loadStarShape(engine);\n    await loadTextShape(engine);\n    await loadLifeUpdater(engine);\n    await loadOpacityUpdater(engine);\n    await loadSizeUpdater(engine);\n    await loadAngleUpdater(engine);\n    await loadColorUpdater(engine);\n    await loadStrokeColorUpdater(engine);\n    await loadOutModesUpdater(engine);\n    await initPjs(engine);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { TiltAnimation } from \"./TiltAnimation\";\nimport { ValueWithRandom } from \"tsparticles-engine\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = \"clockwise\";\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nfunction updateTilt(particle, delta) {\n    var _a, _b;\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = particle.tilt.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case \"increasing\":\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        var _a;\n        const tilt = ((_a = particle.tilt) === null || _a === void 0 ? void 0 : _a.enable) && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        var _a;\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: getRandom() >= 0.5 ? 1 : -1,\n            cosDirection: getRandom() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.tilt.status = \"increasing\";\n                break;\n        }\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        if (tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        return !particle.destroyed && !particle.spawning && !!(tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source === null || source === void 0 ? void 0 : source.tilt);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n","import { TiltUpdater } from \"./TiltUpdater\";\nexport async function loadTiltUpdater(engine) {\n    await engine.addParticleUpdater(\"tilt\", (container) => new TiltUpdater(container));\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { TwinkleValues } from \"./TwinkleValues\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n","import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle\";\nexport class TwinkleUpdater {\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source === null || source === void 0 ? void 0 : source.twinkle);\n        }\n    }\n    update() {\n    }\n}\n","import { TwinkleUpdater } from \"./TwinkleUpdater\";\nexport async function loadTwinkleUpdater(engine) {\n    await engine.addParticleUpdater(\"twinkle\", () => new TwinkleUpdater());\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n","import { WobbleSpeed } from \"./WobbleSpeed\";\nimport { setRangeValue } from \"tsparticles-engine\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (typeof data.speed === \"number\") {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nfunction updateWobble(particle, delta) {\n    var _a;\n    const wobble = particle.options.wobble;\n    if (!(wobble === null || wobble === void 0 ? void 0 : wobble.enable) || !particle.wobble) {\n        return;\n    }\n    const angleSpeed = particle.wobble.angleSpeed * delta.factor, moveSpeed = particle.wobble.moveSpeed * delta.factor, distance = (moveSpeed * (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor)) / (1000 / 60), max = 2 * Math.PI;\n    particle.wobble.angle += angleSpeed;\n    if (particle.wobble.angle > max) {\n        particle.wobble.angle -= max;\n    }\n    particle.position.x += distance * Math.cos(particle.wobble.angle);\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a;\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.enable) {\n            particle.wobble = {\n                angle: getRandom() * Math.PI * 2,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue((_a = wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.distance) !== null && _a !== void 0 ? _a : 0) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        var _a;\n        return !particle.destroyed && !particle.spawning && !!((_a = particle.options.wobble) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source === null || source === void 0 ? void 0 : source.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n","import { WobbleUpdater } from \"./WobbleUpdater\";\nexport async function loadWobbleUpdater(engine) {\n    await engine.addParticleUpdater(\"wobble\", (container) => new WobbleUpdater(container));\n}\n","import { loadAbsorbersPlugin } from \"tsparticles-plugin-absorbers\";\nimport { loadDestroyUpdater } from \"tsparticles-updater-destroy\";\nimport { loadEmittersPlugin } from \"tsparticles-plugin-emitters\";\nimport { loadExternalTrailInteraction } from \"tsparticles-interaction-external-trail\";\nimport { loadRollUpdater } from \"tsparticles-updater-roll\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { loadTiltUpdater } from \"tsparticles-updater-tilt\";\nimport { loadTwinkleUpdater } from \"tsparticles-updater-twinkle\";\nimport { loadWobbleUpdater } from \"tsparticles-updater-wobble\";\nexport async function loadFull(engine) {\n    await loadSlim(engine);\n    await loadDestroyUpdater(engine);\n    await loadRollUpdater(engine);\n    await loadTiltUpdater(engine);\n    await loadTwinkleUpdater(engine);\n    await loadWobbleUpdater(engine);\n    await loadExternalTrailInteraction(engine);\n    await loadAbsorbersPlugin(engine);\n    await loadEmittersPlugin(engine);\n}\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","$$typeof","defaultId","Particles","props","state","init","library","undefined","this","destroy","setState","nextProps","refresh","then","tsParticles","loadParticles","width","height","className","canvasClassName","id","React","style","assign","cb","container","current","loaded","_b","_a","defaultProps","url","_c","params","options","Component","EventDispatcher","_listeners","Map","type","listener","removeEventListener","get","set","push","args","forEach","handler","delete","arr","idx","indexOf","splice","Vector3d","xOrCoords","y","z","x","coords3d","Error","Math","atan2","angle","updateFromAngle","sqrt","getLengthSq","v","create","clone","sub","n","cos","sin","c","v3d","Vector","_random","random","easings","getEasing","name","value","getRandom","clamp","num","min","max","mix","comp1","comp2","weight1","weight2","floor","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","setRangeValue","getValue","enable","minimumValue","getDistances","pointA","pointB","dx","dy","distance","getDistance","collisionVelocity","v1","v2","m1","m2","calcPositionOrRandomFromSize","data","_d","position","size","calcPositionOrRandomFromSizeRanged","calcExactPositionOrRandomFromSize","parseAlpha","input","endsWith","parseFloat","rectSideBounce","pSide","pOtherSide","rectSide","rectOtherSide","velocity","factor","res","bounced","isSsr","window","document","safeMatchMedia","query","matchMedia","isInArray","array","loadFont","font","weight","fonts","load","arrayRandomIndex","itemFromArray","index","useIndex","isPointInside","point","offset","radius","direction","bounds","inside","top","right","left","bottom","areBoundsInside","calculateBounds","deepExtend","destination","sources","sourceIsArray","isObject","destDict","map","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","t","divModeExecute","callback","executeOnSingleOrMultiple","div","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","p","getPosition","getRadius","mass","getMass","bounce","horizontal","vertical","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","xDist","yDist","u1","rotate","u2","vFinal1","vFinal2","rectBounce","particle","divBounds","resH","resV","obj","item","itemFromSingleOrMultiple","find","randomColorValue","midColorValue","colorManagers","addColorManager","manager","hue2rgb","q","stringToRgba","startsWith","stringPrefix","parseString","hexFixed","replace","_","g","result","exec","parseInt","rangeColorToRgb","color","colorToRgb","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","h","l","s","hslToRgb","hsl","hslPercent","fixedMin","getStyleFromRgb","opacity","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","animation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","speed","decay","status","loops","maxLoops","count","sync","initialValue","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","drawTriangle","p3","clear","dimension","clearRect","generatedAttribute","touchEndEvent","mouseMoveEvent","mouseLeaveEvent","setTransformValue","newFactor","newValue","Canvas","_context","_generated","_preDrawUpdaters","_postDrawUpdaters","_resizePlugins","_colorPlugins","_mutationObserver","MutationObserver","records","record","attributeName","_repairStyle","actualOptions","fullScreen","trail","particles","move","trailFill","_trailFill","backgroundMask","paint","_paintBase","image","_paintImage","draw","ctx","disconnect","remove","_resetOriginalStyle","delta","spawning","destroyed","pfColor","psColor","_getPluginParticleColors","fColor","sColor","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","bubble","zOpacity","zStrokeOpacity","strokeOpacity","transform","colorStyles","fill","stroke","_applyPreDrawUpdaters","_e","composite","shadow","pos","rotation","pathRotation","rotateData","transformData","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","shadowOffsetY","fillStyle","strokeWidth","lineWidth","strokeStyle","shape","drawer","drawers","retina","pixelRatio","drawShape","close","afterEffect","drawShapeAfterEffect","drawParticle","sizeRate","_applyPostDrawUpdaters","plugin","drawParticlePlugin","drawPlugin","resize","_initStyle","_initCover","_initTrail","console","error","initBackground","observe","attributes","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","particleFillColor","particleStrokeColor","updaters","updater","afterDraw","getColorStyles","getTransformValues","beforeDraw","canvas","dataset","ariaHidden","_originalStyle","offsetHeight","offsetWidth","getContext","cover","_coverColorStyle","pxRatio","newSize","oldSize","started","resizeFactor","needsRefresh","updateActualOptions","setDensity","_applyResizePlugins","updaterTransform","coverRgb","coverColor","_fullScreen","_setFullScreenStyle","setProperty","fillColor","Promise","resolve","reject","img","createElement","addEventListener","evt","src","baseColor","fillRect","paintBase","globalAlpha","drawImage","paintImage","originalStyle","priority","manageListener","event","add","addOptions","passive","capture","removeOptions","EventListeners","canPush","handlers","mouseMove","e","mouseTouchMove","touchStart","touchMove","touchEnd","mouseTouchFinish","mouseLeave","touchCancel","touchEndClick","mouseTouchClick","mouseUp","mouseDown","visibilityChange","handleVisibilityChange","themeChange","handleThemeChange","oldThemeChange","handleWindowResize","manageListeners","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","events","onClick","handleClickMode","setTimeout","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","default","auto","loadTheme","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","resizeTimeout","clearTimeout","windowResize","delay","detectType","detectsOn","mouseLeaveTmpEvent","canvasEl","parentElement","parentNode","mediaMatch","addListener","removeListener","interactivityEl","html","onHover","pointerEvents","ResizeObserver","resizeObserver","unobserve","entries","target","clicking","downPosition","handled","mousePosition","clickPositionValid","doMouseTouchClick","_f","_g","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","initDelta","fpsLimit","smooth","FrameManager","timestamp","lastFrameTime","lifeTime","duration","OptionsColor","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","elementId","ids","el","Parallax","force","HoverEvent","parallax","ResizeEvent","Events","onDiv","onclick","ondiv","tmp","onhover","Modes","engine","_engine","_container","interactors","interactor","loadModeOptions","Interactivity","modes","detect_on","ManualParticle","Responsive","maxWidth","Infinity","ThemeDefault","Theme","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","Random","ValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","overlap","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","maxSpeed","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","Spin","Move","attract","center","drift","gravity","path","outModes","spin","straight","vibrate","warp","collisions","outMode","out_mode","noise","AnimationOptions","OpacityAnimation","startValue","opacity_min","Opacity","anim","ParticlesDensity","area","value_area","ParticlesNumber","density","limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","_value","custom","loadShape","character","polygon","images","mainKey","altKey","altOverride","emptyValue","mainDifferentValues","altDifferentValues","SizeAnimation","size_min","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","groups","number","reduceDuplicates","group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","Options","autoPlay","detectRetina","manualParticles","pauseOnOutsideViewport","responsive","zLayers","preset","_importPreset","retina_detect","fps_limit","backgroundMode","optResponsive","sort","existingTheme","optTheme","_findDefaultTheme","defaultOptions","responsiveOptions","screen","availWidth","chosenTheme","clientDarkMode","defaultTheme","getPreset","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","isEnabled","interact","reset","fixOutMode","checkModes","coord","maxCoord","setCb","Particle","overrideOptions","override","unbreakable","inRange","slow","particleDestroyed","pathGenerator","_getRollColor","PI","strokeColor","_h","_j","lastPathTime","misplaced","maxDistance","outType","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","shapeOptions","shapeData","_loadShapeData","pathOptions","pathDelay","getPathGenerator","addPath","zIndexValue","initParticle","sizeOptions","sizeRange","sizeAnimation","_calcPosition","initialPosition","copy","canvasSize","moveCenter","isCenterPercent","getParticleDirectionAngle","initialVelocity","_calculateVelocity","moveDecay","origin","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","movers","mover","particleInit","particleCreated","isInsideCanvas","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","baseVelocity","getParticleBaseVelocity","moveOptions","rad","radOffset","range","collisionsOptions","overlapOptions","overlaps","roll","backColor","alter","backFactor","backSum","alterHsl","Point","Range","Circle","rect","circle","pos1","pos2","distPos","abs","w","pow","Rectangle","intersects","w2","h2","QuadTree","rectangle","capacity","_points","_divided","contains","subdivide","_NE","insert","_NW","_SE","_SW","check","found","nextId","zArray","pool","interactionManager","quadTree","getMovers","getUpdaters","addParticle","initializer","countToRemove","removeQuantity","_pushParticle","update","particlesInitialization","pathGenerators","addManualParticles","groupOptions","j","nb","pushing","removeAt","quantity","deleted","zIdx","dispatchEvent","_applyDensity","particlesToDelete","particleUpdate","externalInteract","particlesInteract","manualCount","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","densityOptions","pop","canAdd","warn","Retina","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","moveDrift","moveSpeed","guardCheck","loadContainerOptions","defaultPathGenerator","generate","Container","_delay","_firstStart","_paused","_sourceOptions","_initialSourceOptions","frameManager","_options","_eventListeners","IntersectionObserver","_intersectionObserver","_intersectionManager","clickOrTouchHandler","posRetina","queryCircle","touched","touchMoved","changedTouches","radiusX","radiusY","has","stop","mainArr","dom","findIndex","refreshTime","_drawAnimationFrame","requestAnimationFrame","nextFrame","JSON","stringify","quality","toBlob","exportImage","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","handle","cancelAnimationFrame","needsUpdate","start","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_delayTimeout","addListeners","HTMLElement","removeListeners","newMaxWidth","setResponsive","setTheme","responsiveMaxWidth","entry","isIntersecting","getDataFromUrl","jsonUrl","fetch","response","ok","json","Loader","tagId","remote","loadRemoteOptions","domContainer","getElementById","querySelector","append","currentOptions","oldIndex","old","domItem","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","loadCanvas","newIndex","newId","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","initInteractor","initMover","initUpdater","getPlugin","presetKey","types","needsPlugin","Engine","_domArray","_eventDispatcher","_initialized","_loader","interactorInitializer","addInteractor","moverInitializer","addParticleMover","updaterInitializer","addParticleUpdater","addPathGenerator","addPlugin","addPreset","customDrawer","addShapeDrawer","pathConfigJson","loadJSON","instance","setJSON","addClickHandler","HslColorManager","hsla","rgbResult","hslaToRgba","RgbColorManager","rgbColor","ExternalInteractorBase","ParticlesInteractorBase","rgbColorManager","hslColorManager","AbsorberSizeLimit","AbsorberSize","Absorber","draggable","orbits","AbsorberInstance","absorbers","dragging","calcPosition","sizeFactor","absorberOrbit","needsNewPosition","updateParticlePosition","translate","arc","newPosition","setTo","minSize","absorberOrbitDirection","orbitRadius","orbitAngle","orbitDirection","updateFunc","addV","addTo","Absorbers","interactivityAbsorbers","getAbsorber","idxOrName","addAbsorber","absorber","absorberOptions","modeAbsorbers","absorbersModeOptions","absorbersOptions","aPosition","AbsorbersPlugin","loadAbsorbersPlugin","DestroyBounds","SplitFactor","SplitRate","Split","rate","sizeOffset","Destroy","split","DestroyUpdater","destroyOptions","splitCount","destroyBounds","parent","splitParticlesOptions","splitOptions","particlesSplitOptions","addSplitParticle","loadDestroyUpdater","CircleShape","theta","randomTheta","u","atan","tan","generateTheta","maxRadius","randomRadius","EmitterLife","wait","EmitterRate","EmitterSize","Emitter","life","startCount","domId","spawnColor","EmitterInstance","emitters","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","_spawnDelay","_shape","emitterShapeManager","getShape","_firstSpawn","_startParticlesAdded","_particlesOptions","_lifeCount","_immortal","emitter","elRect","_emitDelay","prepareToDie","emitParticles","_duration","emit","removeEmitter","getSize","singleParticlesOptions","hslAnimation","pPosition","randomPosition","initValue","maxValue","colorOffset","emitFactor","Emitters","interactivityEmitters","getEmitter","addEmitter","playEmitter","externalPlay","pauseEmitter","externalPause","emitterOptions","modeEmitters","emittersModeOptions","usedIndexes","includes","emittersOptions","ePosition","ShapeManager","randomSquareCoordinate","SquareShape","halfW","halfH","side","EmittersPlugin","emitterMode","loadEmittersPlugin","addEmitterShape","addShape","Trail","pauseOnStop","TrailMaker","trailOptions","optDelay","canEmit","_lastPosition","loadExternalTrailInteraction","RollLight","Roll","darken","enlighten","RollUpdater","rollHorizontal","rollVertical","rollOpt","alterType","updateRoll","loadRollUpdater","initPjs","particlesJS","catch","setOnClickHandler","pJSDom","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","updateAngle","loadAngleUpdater","BaseMover","gravityOptions","spinOptions","spinPos","spinCenter","spinAcceleration","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","maxCanvasSize","applyPath","gravityFactor","multTo","mult","zVelocityFactor","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","loadBaseMover","addMover","CircleDrawer","circleRange","loadCircleShape","updateColorValue","valueAnimation","decrease","ColorUpdater","updateColor","loadColorUpdater","Attract","easing","Attractor","finish","attractModeDistance","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","hoverAttract","clickAttract","attractRadius","processAttract","attractOptions","attractFactor","normVec","subFrom","loadExternalAttractInteraction","Bounce","Bouncer","bounceModeDistance","processMouseBounce","singleSelectorBounce","tolerance","processBounce","querySelectorAll","elem","offsetLeft","offsetTop","loadExternalBounceInteraction","BubbleBase","BubbleDiv","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","bubbleModeDistance","bubbleModeSize","hoverBubble","clickBubble","singleSelectorHover","divBubble","mouseClickPos","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","particlesObj","process","opacityData","hoverBubbleColor","pointDistance","hoverBubbleSize","hoverBubbleOpacity","bubbleOptions","finalColor","modeColor","bubbleColor","pColor","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","repulseRadius","loadExternalBubbleInteraction","ConnectLinks","Connect","links","lineLinked","line_linked","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","loadExternalConnectInteraction","GrabLinks","Grab","drawGrab","lineColor","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","loadExternalGrabInteraction","Pauser","loadExternalPauseInteraction","Push","particles_nb","Pusher","pushOptions","pushNb","loadExternalPushInteraction","Remove","Remover","removeNb","loadExternalRemoveInteraction","RepulseBase","RepulseDiv","Repulse","Repulser","repulse","repulseModeDistance","hoverRepulse","clickRepulse","singleSelectorRepulse","divRepulse","repulseDistance","vect","processRepulse","repulseOptions","repulseFactor","loadExternalRepulseInteraction","Slow","Slower","slowModeRadius","particlePos","dist","proximityFactor","loadExternalSlowInteraction","currentColorRegex","loadImage","loading","Image","downloadSvgImage","text","svgData","replaceImageColor","imageData","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","_images","containerImages","getImages","loadImageShape","addImage","imageFunc","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","delayTime","time","justSpawned","widthRange","heightRange","loadLifeUpdater","LineDrawer","loadLineShape","OpacityUpdater","opacityOptions","opacityAnimation","opacityRange","minValue","checkDestroy","updateOpacity","loadOpacityUpdater","BounceOutMode","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","wrap","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","updateOutMode","loadOutModesUpdater","ParallaxMover","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","loadParallaxMover","ax","ay","p1Factor","p2Factor","loadParticlesAttractInteraction","updateAbsorb","r2","resolveCollision","Collider","radius1","radius2","round","loadParticlesCollisionsInteraction","CircleWarp","posNE","posSE","posSW","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","pos2NE","pos2SE","pos2SW","Linker","linkContainer","linksColor","linksColors","linkOpt1","linksDistance","linkOpt2","setColor","loadInteraction","setLinkFrequency","dictionary","join","LinkInstance","_freqs","pOptions","p1Links","getLinkFrequency","link","drawTriangles","drawLinkLine","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","link1","link2","triangleOptions","opacityTriangle","pos3","colorTriangle","drawLinkTriangle","vertices","linkFreq","vertex","getTriangleFrequency","LinksPlugin","loadPlugin","loadParticlesLinksInteraction","PolygonDrawerBase","getCenter","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","nb_sides","PolygonDrawer","TriangleDrawer","loadGenericPolygonShape","loadTriangleShape","loadPolygonShape","SizeUpdater","sizeVelocity","updateSize","loadSizeUpdater","fixFactor","SquareDrawer","loadSquareShape","StarDrawer","inset","starInset","star","loadStarShape","StrokeColorUpdater","strokeAnimation","strokeHslColor","updateStrokeColor","loadStrokeColorUpdater","validTypes","TextDrawer","textData","textParticle","randomIndexData","fillText","strokeText","promises","all","loadTextShape","loadSlim","TiltAnimation","Tilt","TiltUpdater","tilt","cosDirection","sinDirection","tiltOptions","tiltDirection","tiltAnimation","updateTilt","loadTiltUpdater","TwinkleValues","Twinkle","TwinkleUpdater","twinkleOptions","twinkling","twinklingOpacity","twinkleStyle","needsTwinkle","loadTwinkleUpdater","WobbleSpeed","Wobble","rangeSpeed","WobbleUpdater","wobbleOpt","wobble","angleSpeed","wobbleDistance","updateWobble","loadWobbleUpdater","loadFull","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply"],"sourceRoot":""}