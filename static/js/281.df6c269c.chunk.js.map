{"version":3,"file":"static/js/281.df6c269c.chunk.js","mappings":"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","sources":["redux/filter/filterSelector.js","redux/contacts/selectors.js","components/UpdateContactForm/UpdateContactForm.js","components/UpdateContactModal/UpdateContactModal.js","components/ContactsList/ContactsItem.js","components/ContactsList/ContactsList.js","components/AddContactForm/AddContactForm.js","components/AddContactsModals/AddContactsModal.js","components/Filter/Filter.js","components/pages/Contacts.js","constants/ValidationSchema.js"],"sourcesContent":["export const selectFilters = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilters } from '../filter/filterSelector';\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoader = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContact = createSelector(\n  [selectContacts, selectFilters],\n  (contacts, filter) => {\n    const normiliseName = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normiliseName)\n    );\n  }\n);\n","import { useFormik } from 'formik';\nimport { toast } from 'react-toastify';\n\nimport {\n  Grid,\n  Button,\n  FormControl,\n  FormHelperText,\n  InputAdornment,\n  InputLabel,\n  Paper,\n  FilledInput,\n} from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/operations';\nimport { YupValidationLAddContactsForm } from 'constants/ValidationSchema';\nimport { Person, PhoneIphone } from '@mui/icons-material';\n\nexport const UpdateContactForm = ({ onClose, id, name, number }) => {\n  const dispatch = useDispatch();\n\n  //Form submit\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    if (\n      name.trim().toLowerCase() === values.name.trim().toLowerCase() &&\n      number === values.number\n    ) {\n      toast.error('Please make changes to the contact');\n      return;\n    }\n    //Update contact\n    dispatch(updateContact({ id, values }))\n      .unwrap()\n      .then(() => {\n        onClose();\n      })\n      .catch(() => toast.error('Oops, something went wrong. Please try again'));\n    resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name,\n      number,\n    },\n    validationSchema: YupValidationLAddContactsForm,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <Paper elevation={3} sx={{ p: 2 }}>\n      <form onSubmit={formik.handleSubmit}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}></Grid>\n          <Grid item xs={12}>\n            <FormControl variant=\"filled\" fullWidth>\n              <InputLabel htmlFor=\"name\">Name</InputLabel>\n              <FilledInput\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <Person />\n                  </InputAdornment>\n                }\n                fullWidth\n                autoFocus\n                id=\"name\"\n                value={formik.values.name}\n                onChange={formik.handleChange}\n                type=\"name\"\n                label=\"Name\"\n                error={formik.touched.name && Boolean(formik.errors.name)}\n              />\n              <FormHelperText error={true}>\n                {formik.touched.name && formik.errors.name}\n              </FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12}></Grid>\n          <Grid item xs={12}>\n            <FormControl variant=\"filled\" fullWidth>\n              <InputLabel htmlFor=\"number\">Number</InputLabel>\n              <FilledInput\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <PhoneIphone />\n                  </InputAdornment>\n                }\n                fullWidth\n                id=\"number\"\n                value={formik.values.number}\n                onChange={formik.handleChange}\n                type=\"text\"\n                label=\"Number\"\n                error={formik.touched.number && Boolean(formik.errors.number)}\n              />\n              <FormHelperText error={true}>\n                {formik.touched.number && formik.errors.number}\n              </FormHelperText>\n            </FormControl>\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Update contact\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { Backdrop, Box, Modal, Fade } from '@mui/material';\nimport { UpdateContactForm } from 'components/UpdateContactForm';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  maxWidth: 400,\n  width: 300,\n  bgcolor: 'background.paper',\n\n  boxShadow: 24,\n  p: '20px',\n  zIndex: 1000,\n  borderRadius: '15px',\n};\n\nexport const UpdateContactModal = ({\n  isOpenModal,\n  onClose,\n  id,\n  name,\n  number,\n}) => (\n  <Modal\n    open={isOpenModal}\n    onClose={onClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n    aria-labelledby=\"spring-modal-name\"\n    aria-describedby=\"spring-modal-number\"\n  >\n    <Fade in={isOpenModal}>\n      <Box sx={style}>\n        <UpdateContactForm\n          onClose={onClose}\n          id={id}\n          name={name}\n          number={number}\n        />\n      </Box>\n    </Fade>\n  </Modal>\n);\n\nUpdateContactModal.propTypes = {\n  isOpenModal: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  Fab,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  Typography,\n} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { UpdateContactModal } from '../UpdateContactModal/UpdateContactModal';\nimport { useTheme } from '@mui/system';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport Avatar from 'react-avatar';\n\nexport const ContactsItems = ({ id, name, number }) => {\n  const theme = useTheme();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => setIsModalOpen(false);\n\n  const dispatch = useDispatch();\n  const handlerDelete = () =>\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(() =>\n        toast.success(\n          'The contact was successfully deleted from the phone book'\n        )\n      )\n      .catch(() => toast.error('Something went wrong, please try again'));\n\n  const getRandomHexColor = () => {\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n  };\n\n  return (\n    <>\n      <ListItemIcon>\n        <Avatar\n          color={getRandomHexColor()}\n          name={name}\n          size=\"45\"\n          round={true}\n          textSizeRatio={3}\n        />\n      </ListItemIcon>\n      <ListItemText\n        primary={\n          <Typography\n            type=\"body2\"\n            style={{\n              color: theme.palette.mode === 'dark' ? '#cfd8dc' : '#455a64',\n              fontWeight: '600',\n            }}\n          >\n            {name}\n          </Typography>\n        }\n        secondary={\n          <Typography\n            type=\"body2\"\n            style={{\n              color: theme.palette.mode === 'dark' ? '#cfd8dc' : '#455a64',\n            }}\n          >\n            {number}\n          </Typography>\n        }\n      />\n\n      <ListItemSecondaryAction\n        sx={{\n          display: 'flex',\n          flexDirection: { xs: 'column', md: 'row' },\n          mr: { xs: '-10px', md: '0' },\n        }}\n      >\n        <Fab\n          aria-label=\"edit contact\"\n          onClick={handleOpenModal}\n          edge=\"end\"\n          sx={{\n            bgcolor: theme.palette.mode === 'dark' ? '#e65100' : '#f57c00',\n            mb: { xs: '5px', md: '0' },\n            mr: { md: '10px' },\n            width: { xs: '40px', md: '60px' },\n            height: { xs: '40px', md: '60px' },\n          }}\n        >\n          <EditIcon />\n        </Fab>\n        <Fab\n          aria-label=\"delete contact\"\n          onClick={handlerDelete}\n          edge=\"end\"\n          sx={{\n            bgcolor: theme.palette.mode === 'dark' ? '#b71c1c' : '#d32f2f',\n            width: { xs: '40px', md: '60px' },\n            height: { xs: '40px', md: '60px' },\n          }}\n        >\n          <DeleteForeverIcon />\n        </Fab>\n      </ListItemSecondaryAction>\n      <UpdateContactModal\n        isOpenModal={isModalOpen}\n        onClose={handleCloseModal}\n        id={id}\n        name={name}\n        number={number}\n      />\n    </>\n  );\n};\n\nContactsItems.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { ContactsItems } from './ContactsItem';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContact } from '../../redux/contacts/selectors';\nimport { List, ListItem, Box, Typography, Container } from '@mui/material';\nimport { useTheme } from '@mui/system';\n\nexport const ContactsList = () => {\n  const filteredContacts = useSelector(selectFilteredContact);\n  const theme = useTheme();\n  return (\n    <>\n      <Box sx={{ flexGrow: 1, maxWidth: '800px', m: '10px auto 0 auto' }}>\n        {filteredContacts.length === 0 ? (\n          <Container sx={{ m: '25px auto 15px auto' }} maxWidth=\"sm\">\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n              There is no such contact in your phonebook\n            </Typography>\n          </Container>\n        ) : (\n          <List dense={false} sx={{ width: '100%' }}>\n            {filteredContacts.map(({ id, name, number }) => (\n              <ListItem\n                key={id}\n                alignItems=\"center\"\n                sx={{\n                  backgroundColor:\n                    theme.palette.mode === 'dark' ? '#607d8b' : '#ede7f6',\n                  borderRadius: '6px',\n                  boxShadow: 6,\n                  mb: '8px',\n                  p: '15px',\n                }}\n              >\n                <ContactsItems key={id} id={id} name={name} number={number} />\n              </ListItem>\n            ))}\n          </List>\n        )}\n      </Box>\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Grid,\n  Button,\n  FormControl,\n  FormHelperText,\n  InputAdornment,\n  InputLabel,\n  Paper,\n  FilledInput,\n} from '@mui/material';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { Person, PhoneIphone } from '@mui/icons-material';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { YupValidationLAddContactsForm } from 'constants/ValidationSchema';\n\nexport const AddContactForm = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  //Form submit\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n\n    //Checking for duplicate names and phone numbers in contacts\n    const isIncludeName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const isIncludeNumber = contacts.some(contact => contact.number === number);\n\n    if (isIncludeName) {\n      resetForm();\n      return Report.failure('', `${name} is already in contact`);\n    } else if (isIncludeNumber) {\n      resetForm();\n      const { name } = contacts.find(contact => contact.number === number);\n      return Report.failure('', `${number} is already in contact as ${name}`);\n    }\n\n    //Add new contact\n    dispatch(addContact(values))\n      // .unwrap()\n      .then(() => {\n        toast.success('Сontact was successfully added');\n        onClose();\n      })\n      .catch(() => toast.error('Oops, something went wrong. Please try again'));\n    resetForm();\n  };\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    validationSchema: YupValidationLAddContactsForm,\n    onSubmit: handleSubmit,\n  });\n  return (\n    <Paper elevation={3} sx={{ p: 2 }}>\n      <form onSubmit={formik.handleSubmit}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}></Grid>\n          <Grid item xs={12}>\n            <FormControl variant=\"filled\" fullWidth>\n              <InputLabel htmlFor=\"name\">Name</InputLabel>\n              <FilledInput\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <Person />\n                  </InputAdornment>\n                }\n                fullWidth\n                autoFocus\n                id=\"name\"\n                value={formik.values.name}\n                onChange={formik.handleChange}\n                type=\"name\"\n                label=\"Name\"\n                error={formik.touched.name && Boolean(formik.errors.name)}\n              />\n              <FormHelperText error={true}>\n                {formik.touched.name && formik.errors.name}\n              </FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12}></Grid>\n          <Grid item xs={12}>\n            <FormControl variant=\"filled\" fullWidth>\n              <InputLabel htmlFor=\"number\">Number</InputLabel>\n              <FilledInput\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <PhoneIphone />\n                  </InputAdornment>\n                }\n                fullWidth\n                id=\"number\"\n                value={formik.values.number}\n                onChange={formik.handleChange}\n                type=\"text\"\n                label=\"Number\"\n                error={formik.touched.number && Boolean(formik.errors.number)}\n              />\n              <FormHelperText error={true}>\n                {formik.touched.number && formik.errors.number}\n              </FormHelperText>\n            </FormControl>\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Add contact\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nAddContactForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Backdrop, Box, Modal, Fade } from '@mui/material';\n\nimport { AddContactForm } from '../AddContactForm';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  maxWidth: 400,\n  width: 300,\n  bgcolor: 'background.paper',\n\n  boxShadow: 24,\n  p: '20px',\n  zIndex: 1000,\n  borderRadius: '15px',\n};\n\nexport const AddContactModal = ({ isOpenModal, onClose }) => (\n  <div>\n    <Modal\n      open={isOpenModal}\n      onClose={onClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n      aria-labelledby=\"spring-modal-name\"\n      aria-describedby=\"spring-modal-number\"\n    >\n      <Fade in={isOpenModal}>\n        <Box sx={style}>\n          <AddContactForm onClose={onClose} />\n        </Box>\n      </Fade>\n    </Modal>\n  </div>\n);\n\nAddContactModal.propTypes = {\n  isOpenModal: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filtersSlice';\nimport { selectFilters } from 'redux/filter/filterSelector';\nimport { useSelector } from 'react-redux';\nimport {\n  FormControl,\n  Grid,\n  InputAdornment,\n  FilledInput,\n  Box,\n} from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilters);\n  const handlerFilter = e => dispatch(setFilter(e.target.value));\n  return (\n    <Box\n      sx={{\n        flexGrow: 1,\n        alignItems: 'center',\n        maxWidth: '850px',\n        m: '10px auto 0 auto',\n      }}\n    >\n      <Grid item xs={12}></Grid>\n      <Grid item xs={12}>\n        <FormControl variant=\"filled\" fullWidth>\n          <FilledInput\n            placeholder=\"Find contact by name\"\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            }\n            id=\"name\"\n            value={filter}\n            onChange={handlerFilter}\n            type=\"text\"\n            label=\"Filter\"\n          />\n        </FormControl>\n      </Grid>\n    </Box>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoader, selectContacts } from 'redux/contacts/selectors';\nimport { Fab, Typography, Box } from '@mui/material';\nimport { ContactsList } from '../ContactsList';\nimport { Loading } from 'notiflix';\nimport { AddContactModal } from '../AddContactsModals';\nimport { Filter } from '../Filter';\nimport { Container } from '@mui/system';\nimport { useTheme } from '@mui/system';\n\nexport default function Contacts() {\n  const theme = useTheme();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => setIsModalOpen(false);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoader);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Box maxWidth=\"xl\">\n        <Container display=\"flex\">\n          {contacts.length !== 0 && <Filter />}\n        </Container>\n        <Container>\n          {contacts.length !== 0 ? (\n            <ContactsList />\n          ) : (\n            <Container sx={{ m: '25px auto 15px auto' }} maxWidth=\"sm\">\n              <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                Please add the contact to your phonebook\n              </Typography>\n            </Container>\n          )}\n          {isLoading ? Loading.pulse() : Loading.remove()}\n\n          <Fab\n            aria-label=\"Add contact\"\n            color=\"primary\"\n            size=\"large\"\n            sx={{\n              position: 'absolute',\n              top: '9%',\n              right: '1%',\n              width: '70px',\n              height: '70px',\n              bgcolor: theme.palette.mode === 'dark' ? '#0288d1' : '#01579b',\n            }}\n            onClick={handleOpenModal}\n          >\n            <Typography\n              component=\"p\"\n              fontSize={12}\n              fontWeight=\"700\"\n              textTransform=\"none\"\n            >\n              Add contact\n            </Typography>\n          </Fab>\n          <AddContactModal\n            isOpenModal={isModalOpen}\n            onClose={handleCloseModal}\n          />\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import * as yup from 'yup';\nimport 'yup-phone';\n\nexport const YupValidationRegistration = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Too Short !')\n    .max(30, 'Too Long !')\n    .required('Please enter your name'),\n\n  email: yup.string().email('Enter a Vaid Email').required('Email is Required'),\n\n  password: yup\n    .string()\n    .required('Enter Your Password')\n    // .matches(PasswordRegEx, 'Uppercase Lowercase Special char Required')\n    .min(8, 'Password Should be minimum 8 character')\n    .max(50, 'Too long'),\n});\n\nexport const YupValidationLoginForm = yup.object().shape({\n  email: yup.string().email('Enter a Vaid Email').required('Email is Required'),\n\n  password: yup\n    .string()\n    .required('Enter Your Password')\n    .min(8, 'Password Should be minimum 8 character')\n    .max(50, 'Too long'),\n});\n\nexport const YupValidationLAddContactsForm = yup.object().shape({\n  name: yup.string().required('The name must contain only letters and spaces.'),\n  number: yup\n    .string()\n    .phone(null, true, 'Number must contain 10 digits')\n    .required(),\n});\n"],"names":["selectFilters","state","filter","selectContacts","contacts","items","selectLoader","isLoading","selectFilteredContact","createSelector","normiliseName","toLowerCase","contact","name","includes","UpdateContactForm","onClose","id","number","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","YupValidationLAddContactsForm","onSubmit","values","resetForm","console","log","trim","updateContact","unwrap","then","catch","toast","Paper","elevation","sx","p","handleSubmit","Grid","container","spacing","item","xs","FormControl","variant","fullWidth","InputLabel","htmlFor","FilledInput","endAdornment","InputAdornment","position","Person","autoFocus","value","onChange","handleChange","type","label","error","touched","Boolean","errors","FormHelperText","PhoneIphone","Button","mt","mb","style","top","left","transform","maxWidth","width","bgcolor","boxShadow","zIndex","borderRadius","UpdateContactModal","isOpenModal","Modal","open","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","ContactsItems","theme","useTheme","useState","isModalOpen","setIsModalOpen","ListItemIcon","color","Math","floor","random","toString","size","round","textSizeRatio","ListItemText","primary","Typography","palette","mode","fontWeight","secondary","ListItemSecondaryAction","display","flexDirection","md","mr","Fab","onClick","edge","height","Edit","deleteContact","DeleteForever","ContactsList","filteredContacts","useSelector","flexGrow","m","length","Container","component","gutterBottom","List","dense","map","ListItem","alignItems","backgroundColor","AddContactForm","isIncludeName","some","isIncludeNumber","Report","find","addContact","AddContactModal","Filter","placeholder","startAdornment","Search","e","setFilter","target","Contacts","useEffect","fetchContacts","Loading","right","fontSize","textTransform","YupValidationRegistration","yup","shape","min","max","required","email","password","YupValidationLoginForm","phone"],"sourceRoot":""}