{"version":3,"file":"static/js/758.5ddc130b.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.js","components/pages/LoginPage.js","constants/ValidationSchema.js"],"sourcesContent":["import { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { useTheme } from '@mui/system';\nimport { logInUser } from 'redux/auth/authOperation';\nimport { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { YupValidationLoginForm } from 'constants/ValidationSchema';\nimport {\n  Container,\n  Grid,\n  CssBaseline,\n  Typography,\n  Box,\n  Avatar,\n  Link,\n  Button,\n  TextField,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  IconButton,\n  InputAdornment,\n  FormHelperText,\n} from '@mui/material';\n\nimport { VisibilityOff, Visibility } from '@mui/icons-material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nexport const LoginForm = () => {\n  const theme = useTheme();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      logInUser({\n        email: values.email,\n        password: values.password,\n      })\n    )\n      .unwrap()\n      .then(() => {\n        toast.success('You are successfully registered in the phone book');\n        resetForm();\n      })\n      .catch(() => {\n        toast.error(\n          'Incorrect email or password. Please verify your information and try login again'\n        );\n        resetForm();\n      });\n  };\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: YupValidationLoginForm,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar\n            sx={{\n              m: 1,\n              bgcolor: theme.palette.mode === 'dark' ? '#311b92' : '#673ab7',\n            }}\n          >\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n\n          <form onSubmit={formik.handleSubmit}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}></Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  value={formik.values.email}\n                  onChange={formik.handleChange}\n                  error={formik.touched.email && Boolean(formik.errors.email)}\n                  helperText={formik.touched.email && formik.errors.email}\n                />\n              </Grid>\n\n              <Grid item xs={12}></Grid>\n            </Grid>\n            <FormControl variant=\"outlined\" fullWidth>\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\n              <OutlinedInput\n                id=\"password\"\n                fullWidth\n                required\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                type={showPassword ? 'text' : 'password'}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                label=\"Password\"\n                error={\n                  formik.touched.password && Boolean(formik.errors.password)\n                }\n              />\n              <FormHelperText error={true}>\n                {formik.touched.password && formik.errors.password}\n              </FormHelperText>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </form>\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                Already don't have an account? Sign up\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { LoginForm } from '../LoginForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n\n      <LoginForm />\n    </div>\n  );\n}\n","import * as yup from 'yup';\nimport 'yup-phone';\n\nexport const YupValidationRegistration = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Too Short !')\n    .max(30, 'Too Long !')\n    .required('Please enter your name'),\n\n  email: yup.string().email('Enter a Vaid Email').required('Email is Required'),\n\n  password: yup\n    .string()\n    .required('Enter Your Password')\n    // .matches(PasswordRegEx, 'Uppercase Lowercase Special char Required')\n    .min(8, 'Password Should be minimum 8 character')\n    .max(50, 'Too long'),\n});\n\nexport const YupValidationLoginForm = yup.object().shape({\n  email: yup.string().email('Enter a Vaid Email').required('Email is Required'),\n\n  password: yup\n    .string()\n    .required('Enter Your Password')\n    .min(8, 'Password Should be minimum 8 character')\n    .max(50, 'Too long'),\n});\n\nexport const YupValidationLAddContactsForm = yup.object().shape({\n  name: yup.string().required('The name must contain only letters and spaces.'),\n  number: yup\n    .string()\n    .phone(null, true, 'Number must contain 10 digits')\n    .required(),\n});\n"],"names":["LoginForm","theme","useTheme","useState","showPassword","setShowPassword","dispatch","useDispatch","formik","useFormik","initialValues","email","password","validationSchema","YupValidationLoginForm","onSubmit","values","resetForm","logInUser","unwrap","then","toast","catch","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","palette","mode","LockOutlined","Typography","variant","handleSubmit","Grid","container","spacing","item","xs","TextField","required","fullWidth","id","label","name","type","autoComplete","value","onChange","handleChange","error","touched","Boolean","errors","helperText","FormControl","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","preventDefault","edge","VisibilityOff","Visibility","FormHelperText","Button","mt","mb","justifyContent","Link","href","Register","YupValidationRegistration","yup","shape","min","max","YupValidationLAddContactsForm","number","phone"],"sourceRoot":""}